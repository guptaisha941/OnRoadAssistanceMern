{"ast":null,"code":"var _jsxFileName = \"D:\\\\demo_one\\\\react-website-v1\\\\src\\\\components\\\\pages\\\\MapWithLocation.js\";\n// import React, { useEffect, useState } from \"react\";\n// import Map from \"ol/Map\";\n// import View from \"ol/View\";\n// import TileLayer from \"ol/layer/Tile\";\n// import OSM from \"ol/source/OSM\";\n// import Feature from \"ol/Feature\";\n// import Point from \"ol/geom/Point\";\n// import { fromLonLat } from \"ol/proj\";\n// import VectorLayer from \"ol/layer/Vector\";\n// import VectorSource from \"ol/source/Vector\";\n// // import { Icon } from 'ol/style';\n// import { Icon, Style } from 'ol/style';  // Import Style and Icon from ol/style\n\n// const MapWithLocation = () => {\n//   const [map, setMap] = useState(null);\n\n//   useEffect(() => {\n//     const initialMap = new Map({\n//       target: \"map-container\",\n//       layers: [\n//         new TileLayer({\n//           source: new OSM(),\n//         }),\n//       ],\n//       view: new View({\n//         center: fromLonLat([0, 0]),\n//         zoom: 2,\n//       }),\n//     });\n//     setMap(initialMap);\n//   }, []);\n\n//   useEffect(() => {\n//     if (map) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           const longitude = position.coords.longitude;\n//           const latitude = position.coords.latitude;\n\n//           // Create a marker for your location\n//           const marker = new Feature({\n//             geometry: new Point(fromLonLat([longitude, latitude])),\n//           });\n\n//           // Create a new style for the marker using IconStyle\n//           const iconStyle = new Style({\n//             image: new Icon({\n//               src: \"https://openlayers.org/en/latest/examples/data/icon.png\",\n//             }),\n//           });\n\n//           // Create a vector source and add the marker feature to it\n//           const vectorSource = new VectorSource({\n//             features: [marker],\n//           });\n//           marker.setStyle(iconStyle);\n\n//           // Add the vector layer to the map\n//           const vectorLayer = new VectorLayer({\n//             source: vectorSource,\n//           });\n//           map.addLayer(vectorLayer);\n\n//           // Set the view to your location\n//           map.getView().setCenter(fromLonLat([longitude, latitude]));\n//           map.getView().setZoom(15);\n//         },\n//         (error) => {\n//           console.error(error);\n//         }\n//       );\n//     }\n//   }, [map]);\n\n//   return <div id=\"map-container\" style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapWithLocation;\n\n// *********************************OPEN LAYERS CODE********************************************************\n\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport axios from 'axios';\nclass MapWithLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: null,\n      lng: null,\n      hospitals: [\n        // {\n        //   name: 'Malot Hospital',\n        //   lat: 26.8436,\n        //   lng: 75.6551,\n        // },\n        // {\n        //   name: 'Garhwal Family',\n        //   lat: 26.8505,\n        //   lng: 75.6508,\n        // },\n        // {\n        //   name: 'Rawal Hospital',\n        //   lat: 26.871816910738366,\n        //   lng: 75.70065283851683,\n        // },\n      ],\n      garages: [\n        // {\n        //   name: 'Audi Jaipur',\n        //   lat: 26.917302544974202,\n        //   lng: 75.80350139710916,\n        // },\n        // {\n        //   name: 'Haighway Automobiles',\n        //   lat: 26.85303633764573,\n        //   lng: 75.64782261245408,\n        // },\n      ]\n    };\n  }\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    }, () => {\n      console.log('Error getting current position');\n    });\n    axios.get('http://localhost:5000/api/locations').then(response => {\n      this.setState({\n        locations: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  render() {\n    const {\n      google\n    } = this.props;\n    const {\n      lat,\n      lng,\n      locations\n    } = this.state;\n    if (!lat || !lng) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n    const mapStyles = {\n      width: '100%',\n      height: '500px'\n    };\n    const mapOptions = {\n      center: {\n        lat,\n        lng\n      },\n      zoom: 16\n    };\n    return /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: mapOptions.zoom,\n      style: mapStyles,\n      initialCenter: mapOptions.center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }, locations.map(location => /*#__PURE__*/React.createElement(Marker, {\n      key: location.name,\n      name: location.name,\n      position: {\n        lat: location.lat,\n        lng: location.lng\n      },\n      icon: {\n        url: location.type === 'hospital' ? 'https://maps.google.com/mapfiles/ms/icons/hospitals.png' : 'https://maps.google.com/mapfiles/ms/icons/gas.png',\n        anchor: new google.maps.Point(16, 16),\n        scaledSize: new google.maps.Size(32, 32)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Marker, {\n      name: 'My Location',\n      position: {\n        lat,\n        lng\n      },\n      icon: {\n        url: 'https://maps.google.com/mapfiles/ms/icons/blue.png',\n        anchor: new google.maps.Point(16, 16),\n        scaledSize: new google.maps.Size(32, 32)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY'\n})(Ma);","map":{"version":3,"names":["React","Component","Map","GoogleApiWrapper","Marker","axios","MapWithLocation","constructor","props","state","lat","lng","hospitals","garages","componentDidMount","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","console","log","get","then","response","locations","data","catch","error","render","google","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapStyles","width","height","mapOptions","center","zoom","style","initialCenter","map","location","key","name","icon","url","type","anchor","maps","Point","scaledSize","Size","apiKey","Ma"],"sources":["D:/demo_one/react-website-v1/src/components/pages/MapWithLocation.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Map from \"ol/Map\";\r\n// import View from \"ol/View\";\r\n// import TileLayer from \"ol/layer/Tile\";\r\n// import OSM from \"ol/source/OSM\";\r\n// import Feature from \"ol/Feature\";\r\n// import Point from \"ol/geom/Point\";\r\n// import { fromLonLat } from \"ol/proj\";\r\n// import VectorLayer from \"ol/layer/Vector\";\r\n// import VectorSource from \"ol/source/Vector\";\r\n// // import { Icon } from 'ol/style';\r\n// import { Icon, Style } from 'ol/style';  // Import Style and Icon from ol/style\r\n\r\n// const MapWithLocation = () => {\r\n//   const [map, setMap] = useState(null);\r\n  \r\n\r\n//   useEffect(() => {\r\n//     const initialMap = new Map({\r\n//       target: \"map-container\",\r\n//       layers: [\r\n//         new TileLayer({\r\n//           source: new OSM(),\r\n//         }),\r\n//       ],\r\n//       view: new View({\r\n//         center: fromLonLat([0, 0]),\r\n//         zoom: 2,\r\n//       }),\r\n//     });\r\n//     setMap(initialMap);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (map) {\r\n//       navigator.geolocation.getCurrentPosition(\r\n//         (position) => {\r\n//           const longitude = position.coords.longitude;\r\n//           const latitude = position.coords.latitude;\r\n\r\n//           // Create a marker for your location\r\n//           const marker = new Feature({\r\n//             geometry: new Point(fromLonLat([longitude, latitude])),\r\n//           });\r\n\r\n//           // Create a new style for the marker using IconStyle\r\n//           const iconStyle = new Style({\r\n//             image: new Icon({\r\n//               src: \"https://openlayers.org/en/latest/examples/data/icon.png\",\r\n//             }),\r\n//           });\r\n\r\n//           // Create a vector source and add the marker feature to it\r\n//           const vectorSource = new VectorSource({\r\n//             features: [marker],\r\n//           });\r\n//           marker.setStyle(iconStyle);\r\n\r\n//           // Add the vector layer to the map\r\n//           const vectorLayer = new VectorLayer({\r\n//             source: vectorSource,\r\n//           });\r\n//           map.addLayer(vectorLayer);\r\n\r\n//           // Set the view to your location\r\n//           map.getView().setCenter(fromLonLat([longitude, latitude]));\r\n//           map.getView().setZoom(15);\r\n//         },\r\n//         (error) => {\r\n//           console.error(error);\r\n//         }\r\n//       );\r\n//     }\r\n//   }, [map]);\r\n\r\n\r\n//   return <div id=\"map-container\" style={{ height: \"500px\" }}></div>;\r\n// };\r\n\r\n// export default MapWithLocation;\r\n\r\n// *********************************OPEN LAYERS CODE********************************************************\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\nimport axios from 'axios';\r\n\r\nclass MapWithLocation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lat: null,\r\n      lng: null,\r\n      hospitals: [\r\n        // {\r\n        //   name: 'Malot Hospital',\r\n        //   lat: 26.8436,\r\n        //   lng: 75.6551,\r\n        // },\r\n        // {\r\n        //   name: 'Garhwal Family',\r\n        //   lat: 26.8505,\r\n        //   lng: 75.6508,\r\n        // },\r\n        // {\r\n        //   name: 'Rawal Hospital',\r\n        //   lat: 26.871816910738366,\r\n        //   lng: 75.70065283851683,\r\n        // },\r\n      ],\r\n      garages: [\r\n        // {\r\n        //   name: 'Audi Jaipur',\r\n        //   lat: 26.917302544974202,\r\n        //   lng: 75.80350139710916,\r\n        // },\r\n        // {\r\n        //   name: 'Haighway Automobiles',\r\n        //   lat: 26.85303633764573,\r\n        //   lng: 75.64782261245408,\r\n        // },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        this.setState({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n      },\r\n      () => {\r\n        console.log('Error getting current position');\r\n      }\r\n    );\r\n\r\n    axios.get('http://localhost:5000/api/locations')\r\n      .then(response => {\r\n        this.setState({\r\n          locations: response.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { google } = this.props;\r\n    const { lat, lng, locations } = this.state;\r\n\r\n    if (!lat || !lng) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    const mapStyles = {\r\n      width: '100%',\r\n      height: '500px',\r\n    };\r\n\r\n    const mapOptions = {\r\n      center: { lat, lng },\r\n      zoom: 16,\r\n    };\r\n\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={mapOptions.zoom}\r\n        style={mapStyles}\r\n        initialCenter={mapOptions.center}\r\n      >\r\n        {locations.map((location) => (\r\n          <Marker\r\n            key={location.name}\r\n            name={location.name}\r\n            position={{ lat: location.lat, lng: location.lng }}\r\n            icon={{\r\n              url: location.type === 'hospital'?\r\n               'https://maps.google.com/mapfiles/ms/icons/hospitals.png'\r\n               : 'https://maps.google.com/mapfiles/ms/icons/gas.png',\r\n              anchor: new google.maps.Point(16, 16),\r\n              scaledSize: new google.maps.Size(32, 32),\r\n            }}\r\n          />\r\n        ))}\r\n        {/* {garages.map((location) => (\r\n          <Marker\r\n            key={location.name}\r\n            name={location.name}\r\n            position={{ lat: location.lat, lng: location.lng }}\r\n            icon={{\r\n              url: 'https://maps.google.com/mapfiles/ms/icons/blue.png',\r\n              anchor: new google.maps.Point(16, 16),\r\n              scaledSize: new google.maps.Size(32, 32),\r\n            }} */}\r\n          {/* /> */}\r\n        {/* ))} */}\r\n        <Marker\r\n          name={'My Location'}\r\n          position={{ lat, lng }}\r\n          icon={{\r\n            url: 'https://maps.google.com/mapfiles/ms/icons/blue.png',\r\n            anchor: new google.maps.Point(16, 16),\r\n            scaledSize: new google.maps.Size(32, 32),\r\n          }}\r\n        />\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY',\r\n})(Ma);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}