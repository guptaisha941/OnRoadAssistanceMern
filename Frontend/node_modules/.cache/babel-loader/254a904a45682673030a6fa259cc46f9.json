{"ast":null,"code":"/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/function (BaseLayer) {\n  function LayerGroup(opt_options) {\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */assign({}, options);\n    delete baseOptions.layers;\n    var layers = options.layers;\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n    listen(this, getChangeEventType(Property.LAYERS), this.handleLayersChanged_, this);\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {\n          unique: true\n        });\n      } else {\n        assert(typeof /** @type {?} */layers.getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {\n        unique: true\n      });\n    }\n    this.setLayers(layers);\n  }\n  if (BaseLayer) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create(BaseLayer && BaseLayer.prototype);\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_() {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    }\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_(collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */collectionEvent.element;\n    this.listenerKeys_[getUid(layer)] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_(collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */collectionEvent.element;\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers() {\n    return (/** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */this.get(Property.LAYERS)\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray(opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray(opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n    var pos = states.length;\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState() {\n    return SourceState.READY;\n  };\n  return LayerGroup;\n}(BaseLayer);\nexport default LayerGroup;","map":{"version":3,"names":["getUid","Collection","CollectionEventType","getChangeEventType","ObjectEventType","assert","listen","unlistenByKey","EventType","getIntersection","BaseLayer","assign","clear","SourceState","Property","LAYERS","LayerGroup","opt_options","options","baseOptions","layers","call","layersListenerKeys_","listenerKeys_","handleLayersChanged_","Array","isArray","slice","unique","getArray","undefined","setLayers","handleLayerChange_","changed","forEach","length","getLayers","push","ADD","handleLayersAdd_","REMOVE","handleLayersRemove_","id","layersArray","i","ii","layer","PROPERTYCHANGE","CHANGE","collectionEvent","element","key","get","set","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","pos","ownLayerState","getLayerState","layerState","opacity","visible","maxResolution","Math","min","minResolution","max","extent","getSourceState","READY"],"sources":["../../../src/ol/layer/Group.js"],"sourcesContent":["/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\n\nexport default LayerGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}