{"ast":null,"code":"/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function' ? Object.assign : function (target, var_sources) {\n  var arguments$1 = arguments;\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}","map":{"version":3,"names":["assign","Object","target","var_sources","undefined","TypeError","output","i","ii","arguments","length","source","arguments$1","key","hasOwnProperty","clear","object","property","getValues","values","push","isEmpty"],"sources":["../../src/ol/obj.js"],"sourcesContent":["/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;AAcA,OAAO,IAAMA,MAAM,GAAI,OAAOC,MAAM,CAACD,MAAM,KAAK,UAAU,GAAIC,MAAM,CAACD,MAAM,GAAG,UAASE,MAAM,EAAEC,WAAW,EAAE;;EAC1G,IAAID,MAAM,KAAKE,SAAS,IAAIF,MAAM,KAAK,IAAI,EAAE;IAC3C,MAAM,IAAIG,SAAS,CAAC,4CAA4C,CAAC;;EAGnE,IAAMC,MAAM,GAAGL,MAAM,CAACC,MAAM,CAAC;EAC7B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;IAClD,IAAMI,MAAM,GAAGC,WAAS,CAACL,CAAC,CAAC;IAC3B,IAAII,MAAM,KAAKP,SAAS,IAAIO,MAAM,KAAK,IAAI,EAAE;MAC3C,KAAK,IAAME,GAAG,IAAIF,MAAM,EAAE;QACxB,IAAIA,MAAM,CAACG,cAAc,CAACD,GAAG,CAAC,EAAE;UAC9BP,MAAM,CAACO,GAAG,CAAC,GAAGF,MAAM,CAACE,GAAG,CAAC;;;;;EAKjC,OAAOP,MAAM;CACd;;;;;;AAOD,OAAO,SAASS,KAAKA,CAACC,MAAM,EAAE;EAC5B,KAAK,IAAMC,QAAQ,IAAID,MAAM,EAAE;IAC7B,OAAOA,MAAM,CAACC,QAAQ,CAAC;;;;;;;;;;AAW3B,OAAO,SAASC,SAASA,CAACF,MAAM,EAAE;EAChC,IAAMG,MAAM,GAAG,EAAE;EACjB,KAAK,IAAMF,QAAQ,IAAID,MAAM,EAAE;IAC7BG,MAAM,CAACC,IAAI,CAACJ,MAAM,CAACC,QAAQ,CAAC,CAAC;;EAE/B,OAAOE,MAAM;;;;;;;;AASf,OAAO,SAASE,OAAOA,CAACL,MAAM,EAAE;EAC9B,IAAIC,QAAQ;EACZ,KAAKA,QAAQ,IAAID,MAAM,EAAE;IACvB,OAAO,KAAK;;EAEd,OAAO,CAACC,QAAQ"},"metadata":{},"sourceType":"module"}