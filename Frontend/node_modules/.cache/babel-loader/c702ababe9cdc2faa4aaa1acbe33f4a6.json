{"ast":null,"code":"// // import React, { useEffect, useState } from \"react\";\n// // import Map from \"ol/Map\";\n// // import View from \"ol/View\";\n// // import TileLayer from \"ol/layer/Tile\";\n// // import OSM from \"ol/source/OSM\";\n// // import Feature from \"ol/Feature\";\n// // import Point from \"ol/geom/Point\";\n// // import { fromLonLat } from \"ol/proj\";\n// // import VectorLayer from \"ol/layer/Vector\";\n// // import VectorSource from \"ol/source/Vector\";\n// // // import { Icon } from 'ol/style';\n// // import { Icon, Style } from 'ol/style';  // Import Style and Icon from ol/style\n\n// // const MapWithLocation = () => {\n// //   const [map, setMap] = useState(null);\n\n// //   useEffect(() => {\n// //     const initialMap = new Map({\n// //       target: \"map-container\",\n// //       layers: [\n// //         new TileLayer({\n// //           source: new OSM(),\n// //         }),\n// //       ],\n// //       view: new View({\n// //         center: fromLonLat([0, 0]),\n// //         zoom: 2,\n// //       }),\n// //     });\n// //     setMap(initialMap);\n// //   }, []);\n\n// //   useEffect(() => {\n// //     if (map) {\n// //       navigator.geolocation.getCurrentPosition(\n// //         (position) => {\n// //           const longitude = position.coords.longitude;\n// //           const latitude = position.coords.latitude;\n\n// //           // Create a marker for your location\n// //           const marker = new Feature({\n// //             geometry: new Point(fromLonLat([longitude, latitude])),\n// //           });\n\n// //           // Create a new style for the marker using IconStyle\n// //           const iconStyle = new Style({\n// //             image: new Icon({\n// //               src: \"https://openlayers.org/en/latest/examples/data/icon.png\",\n// //             }),\n// //           });\n\n// //           // Create a vector source and add the marker feature to it\n// //           const vectorSource = new VectorSource({\n// //             features: [marker],\n// //           });\n// //           marker.setStyle(iconStyle);\n\n// //           // Add the vector layer to the map\n// //           const vectorLayer = new VectorLayer({\n// //             source: vectorSource,\n// //           });\n// //           map.addLayer(vectorLayer);\n\n// //           // Set the view to your location\n// //           map.getView().setCenter(fromLonLat([longitude, latitude]));\n// //           map.getView().setZoom(15);\n// //         },\n// //         (error) => {\n// //           console.error(error);\n// //         }\n// //       );\n// //     }\n// //   }, [map]);\n\n// //   return <div id=\"map-container\" style={{ height: \"500px\" }}></div>;\n// // };\n\n// // export default MapWithLocation;\n\n// /*global google*/\n\n// import React, { useState, useEffect } from \"react\";\n// import { Loader } from \"@googlemaps/js-api-loader\";\n\n// const MapWithLocation = () => {\n//   const [map, setMap] = useState(null);\n\n//   useEffect(() => {\n//     const loader = new Loader({\n//       apiKey: \"AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY\",\n//       version: \"weekly\",\n//       libraries: [\"places\"],\n//     });\n\n//     loader.load().then(() => {\n//       const mapOptions = {\n//         center: { lat: 0, lng: 0 },\n//         zoom: 15,\n//       };\n//       const map = new google.maps.Map(\n//         document.getElementById(\"map\"),\n//         mapOptions\n//       );\n//       setMap(map);\n\n//       if (map && navigator.geolocation) {\n//         navigator.geolocation.getCurrentPosition((position) => {\n//           const pos = {\n//             lat: position.coords.latitude,\n//             lng: position.coords.longitude,\n//           };\n//           map.setCenter(pos);\n//           new google.maps.Marker({\n//             position: pos,\n//             map: map,\n//           });\n//         });\n//       }\n//     });\n//   }, []);\n\n//   return (\n//     <div style={{ height: \"500px\", width: \"100%\" }} id=\"map\">\n//       {!map && <div>Loading...</div>}\n//     </div>\n//   );\n// };\n\n// export default MapWithLocation;\n\n// import React from 'react';\n// import ReactMapboxGl from 'react-mapbox-gl';\n\n// const MapWithLocation = () => {\n\n//   const [longitude, setLongitude] = useState(null);\n//   const [latitude, setLatitude] = useState(null);\n\n//   useEffect(() => {\n//     navigator.geolocation.getCurrentPosition(\n//       (position) => {\n//         setLongitude(position.coords.longitude);\n//         setLatitude(position.coords.latitude);\n//       },\n//       (error) => console.log(error),\n//       {\n//         enableHighAccuracy: true,\n//         timeout: 5000,\n//         maximumAge: 0\n//       }\n//     );\n//   }, []);\n\n//   const Mapbox = ReactMapboxGl({\n//     accessToken: 'your-access-token-here'\n//   });\n\n//   return (\n//     <Mapbox\n//       style=\"mapbox://styles/mapbox/streets-v11\"\n//       containerStyle={{\n//         height: '400px',\n//         width: '100%'\n//       }}\n//       center={[longitude, latitude]}\n//       zoom={[13]}\n//     />\n//   );\n// };\n\n// export default MapWithLocation;\n\n// import React from 'react';\n// import { MapmyIndia } from '@mapmyindia/mapmyindia-map-v8-web-sdk';\n\n// const Map = () => {\n//   const [map, setMap] = React.useState(null);\n\n//   const [longitude, setLongitude] = useState(null);\n//   const [latitude, setLatitude] = useState(null);\n\n//   useEffect(() => {\n//     navigator.geolocation.getCurrentPosition(\n//       (position) => {\n//         setLongitude(position.coords.longitude);\n//         setLatitude(position.coords.latitude);\n//       },\n//       (error) => console.log(error),\n//       {\n//         enableHighAccuracy: true,\n//         timeout: 5000,\n//         maximumAge: 0\n//       }\n//     );\n//   }, []);\n\n//   React.useEffect(() => {\n//     const map = new MapmyIndia.Map(\"map\", {\n//       center: [longitude, latitude],\n//       zoom: 13,\n//       // Replace \"your-access-token-here\" and \"your-client-id-here\" with your actual MapmyIndia API access token and client ID respectively.\n//       authOptions: {\n//         'token': 'cddb7c015cd6437dce79ff72095bb700',\n//         'clientId': '33OkryzDZsJF_r8s_-vML8joEjiXjZI67WpvxpKg2JxyKnowt3s4ZVTkE1iCroRos1vXiRmkKHhspKluQVMoWg=='\n//       }\n//     });\n//     setMap(map);\n//   }, []);\n\n//   return (\n//     <div id=\"map\" style={{ height: \"400px\" }}></div>\n//   );\n// };\n\n// export default Map;","map":{"version":3,"names":[],"sources":["D:/demo_one/react-website-v1/src/components/pages/MapWithLocation.js"],"sourcesContent":["// // import React, { useEffect, useState } from \"react\";\r\n// // import Map from \"ol/Map\";\r\n// // import View from \"ol/View\";\r\n// // import TileLayer from \"ol/layer/Tile\";\r\n// // import OSM from \"ol/source/OSM\";\r\n// // import Feature from \"ol/Feature\";\r\n// // import Point from \"ol/geom/Point\";\r\n// // import { fromLonLat } from \"ol/proj\";\r\n// // import VectorLayer from \"ol/layer/Vector\";\r\n// // import VectorSource from \"ol/source/Vector\";\r\n// // // import { Icon } from 'ol/style';\r\n// // import { Icon, Style } from 'ol/style';  // Import Style and Icon from ol/style\r\n\r\n// // const MapWithLocation = () => {\r\n// //   const [map, setMap] = useState(null);\r\n  \r\n\r\n// //   useEffect(() => {\r\n// //     const initialMap = new Map({\r\n// //       target: \"map-container\",\r\n// //       layers: [\r\n// //         new TileLayer({\r\n// //           source: new OSM(),\r\n// //         }),\r\n// //       ],\r\n// //       view: new View({\r\n// //         center: fromLonLat([0, 0]),\r\n// //         zoom: 2,\r\n// //       }),\r\n// //     });\r\n// //     setMap(initialMap);\r\n// //   }, []);\r\n\r\n// //   useEffect(() => {\r\n// //     if (map) {\r\n// //       navigator.geolocation.getCurrentPosition(\r\n// //         (position) => {\r\n// //           const longitude = position.coords.longitude;\r\n// //           const latitude = position.coords.latitude;\r\n\r\n// //           // Create a marker for your location\r\n// //           const marker = new Feature({\r\n// //             geometry: new Point(fromLonLat([longitude, latitude])),\r\n// //           });\r\n\r\n// //           // Create a new style for the marker using IconStyle\r\n// //           const iconStyle = new Style({\r\n// //             image: new Icon({\r\n// //               src: \"https://openlayers.org/en/latest/examples/data/icon.png\",\r\n// //             }),\r\n// //           });\r\n\r\n// //           // Create a vector source and add the marker feature to it\r\n// //           const vectorSource = new VectorSource({\r\n// //             features: [marker],\r\n// //           });\r\n// //           marker.setStyle(iconStyle);\r\n\r\n// //           // Add the vector layer to the map\r\n// //           const vectorLayer = new VectorLayer({\r\n// //             source: vectorSource,\r\n// //           });\r\n// //           map.addLayer(vectorLayer);\r\n\r\n// //           // Set the view to your location\r\n// //           map.getView().setCenter(fromLonLat([longitude, latitude]));\r\n// //           map.getView().setZoom(15);\r\n// //         },\r\n// //         (error) => {\r\n// //           console.error(error);\r\n// //         }\r\n// //       );\r\n// //     }\r\n// //   }, [map]);\r\n\r\n\r\n// //   return <div id=\"map-container\" style={{ height: \"500px\" }}></div>;\r\n// // };\r\n\r\n// // export default MapWithLocation;\r\n\r\n\r\n// /*global google*/\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Loader } from \"@googlemaps/js-api-loader\";\r\n\r\n// const MapWithLocation = () => {\r\n//   const [map, setMap] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const loader = new Loader({\r\n//       apiKey: \"AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY\",\r\n//       version: \"weekly\",\r\n//       libraries: [\"places\"],\r\n//     });\r\n\r\n//     loader.load().then(() => {\r\n//       const mapOptions = {\r\n//         center: { lat: 0, lng: 0 },\r\n//         zoom: 15,\r\n//       };\r\n//       const map = new google.maps.Map(\r\n//         document.getElementById(\"map\"),\r\n//         mapOptions\r\n//       );\r\n//       setMap(map);\r\n\r\n//       if (map && navigator.geolocation) {\r\n//         navigator.geolocation.getCurrentPosition((position) => {\r\n//           const pos = {\r\n//             lat: position.coords.latitude,\r\n//             lng: position.coords.longitude,\r\n//           };\r\n//           map.setCenter(pos);\r\n//           new google.maps.Marker({\r\n//             position: pos,\r\n//             map: map,\r\n//           });\r\n//         });\r\n//       }\r\n//     });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div style={{ height: \"500px\", width: \"100%\" }} id=\"map\">\r\n//       {!map && <div>Loading...</div>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MapWithLocation;\r\n\r\n\r\n// import React from 'react';\r\n// import ReactMapboxGl from 'react-mapbox-gl';\r\n\r\n// const MapWithLocation = () => {\r\n\r\n//   const [longitude, setLongitude] = useState(null);\r\n//   const [latitude, setLatitude] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       (position) => {\r\n//         setLongitude(position.coords.longitude);\r\n//         setLatitude(position.coords.latitude);\r\n//       },\r\n//       (error) => console.log(error),\r\n//       {\r\n//         enableHighAccuracy: true,\r\n//         timeout: 5000,\r\n//         maximumAge: 0\r\n//       }\r\n//     );\r\n//   }, []);\r\n\r\n//   const Mapbox = ReactMapboxGl({\r\n//     accessToken: 'your-access-token-here'\r\n//   });\r\n\r\n//   return (\r\n//     <Mapbox\r\n//       style=\"mapbox://styles/mapbox/streets-v11\"\r\n//       containerStyle={{\r\n//         height: '400px',\r\n//         width: '100%'\r\n//       }}\r\n//       center={[longitude, latitude]}\r\n//       zoom={[13]}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default MapWithLocation;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { MapmyIndia } from '@mapmyindia/mapmyindia-map-v8-web-sdk';\r\n\r\n// const Map = () => {\r\n//   const [map, setMap] = React.useState(null);\r\n\r\n//   const [longitude, setLongitude] = useState(null);\r\n//   const [latitude, setLatitude] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       (position) => {\r\n//         setLongitude(position.coords.longitude);\r\n//         setLatitude(position.coords.latitude);\r\n//       },\r\n//       (error) => console.log(error),\r\n//       {\r\n//         enableHighAccuracy: true,\r\n//         timeout: 5000,\r\n//         maximumAge: 0\r\n//       }\r\n//     );\r\n//   }, []);\r\n\r\n//   React.useEffect(() => {\r\n//     const map = new MapmyIndia.Map(\"map\", {\r\n//       center: [longitude, latitude],\r\n//       zoom: 13,\r\n//       // Replace \"your-access-token-here\" and \"your-client-id-here\" with your actual MapmyIndia API access token and client ID respectively.\r\n//       authOptions: {\r\n//         'token': 'cddb7c015cd6437dce79ff72095bb700',\r\n//         'clientId': '33OkryzDZsJF_r8s_-vML8joEjiXjZI67WpvxpKg2JxyKnowt3s4ZVTkE1iCroRos1vXiRmkKHhspKluQVMoWg=='\r\n//       }\r\n//     });\r\n//     setMap(map);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div id=\"map\" style={{ height: \"400px\" }}></div>\r\n//   );\r\n// };\r\n\r\n// export default Map;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAGA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}