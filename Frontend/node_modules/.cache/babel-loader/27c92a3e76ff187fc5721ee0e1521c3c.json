{"ast":null,"code":"/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle() {\n  return this.angle_;\n};\nexport default Kinetic;","map":{"version":3,"names":["Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","prototype","begin","length","update","x","y","push","Date","now","end","lastIndex","firstIndex","duration","dx","dy","Math","atan2","sqrt","getDistance","getAngle"],"sources":["../../src/ol/Kinetic.js"],"sourcesContent":["/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}