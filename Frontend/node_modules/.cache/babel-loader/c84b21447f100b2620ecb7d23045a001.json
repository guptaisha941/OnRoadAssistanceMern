{"ast":null,"code":"/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' + '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' + 'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/function (XYZ) {\n  function OSM(opt_options) {\n    var options = opt_options || {};\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n    var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n    var url = options.url !== undefined ? options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n  }\n  if (XYZ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create(XYZ && XYZ.prototype);\n  OSM.prototype.constructor = OSM;\n  return OSM;\n}(XYZ);\nexport default OSM;","map":{"version":3,"names":["XYZ","ATTRIBUTION","OSM","opt_options","options","attributions","undefined","crossOrigin","url","call","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX","attributionsCollapsible","prototype","constructor"],"sources":["../../../src/ol/source/OSM.js"],"sourcesContent":["/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options=} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    const url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n}\n\nexport default OSM;\n"],"mappings":"AAAA;;;;AAIA,OAAOA,GAAG,MAAM,UAAU;;;;;;;;;AAU1B,OAAO,IAAMC,WAAW,GAAG,SAAS,GAC9B,sEAAsE,GACtE,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCrB,IAAMC,GAAG,GAAY,uBAAAF,GAAA;EAInB,SAAAE,GAAWA,CAACC,WAAW,EAAE;IAEvB,IAAMC,OAAO,GAAGD,WAAW,IAAI,EAAE;IAEjC,IAAIE,YAAY;IAChB,IAAID,OAAO,CAACC,YAAY,KAAKC,SAAS,EAAE;MACtCD,YAAY,GAAGD,OAAO,CAACC,YAAY;KACpC,MAAM;MACLA,YAAY,GAAG,CAACJ,WAAW,CAAC;;IAG9B,IAAMM,WAAW,GAAGH,OAAO,CAACG,WAAW,KAAKD,SAAS,GACnDF,OAAO,CAACG,WAAW,GAAG,WAAW;IAEnC,IAAMC,GAAG,GAAGJ,OAAO,CAACI,GAAG,KAAKF,SAAS,GACnCF,OAAO,CAACI,GAAG,GAAG,sDAAsD;IAEtER,GAAA,CAAAS,IAAK,OAAC;MACJJ,YAAY,EAAEA,YAAY;MAC1BK,SAAS,EAAEN,OAAO,CAACM,SAAS;MAC5BH,WAAW,EAAEA,WAAW;MACxBI,MAAM,EAAEP,OAAO,CAACO,MAAM,KAAKL,SAAS,GAAGF,OAAO,CAACO,MAAM,GAAG,IAAI;MAC5DC,OAAO,EAAER,OAAO,CAACQ,OAAO,KAAKN,SAAS,GAAGF,OAAO,CAACQ,OAAO,GAAG,EAAE;MAC7DC,0BAA0B,EAAET,OAAO,CAACS,0BAA0B;MAC9DC,gBAAgB,EAAEV,OAAO,CAACU,gBAAgB;MAC1CN,GAAG,EAAEA,GAAG;MACRO,KAAK,EAAEX,OAAO,CAACW,KAAK;MACpBC,uBAAuB,EAAE;KAC1B,CAAC;;;;KAEH,CAAAC,SAAA,CAAAC,WAAA,GAAAhB,GAAA;;EAlCeF,GAAA;AAsClB,eAAeE,GAAG"},"metadata":{},"sourceType":"module"}