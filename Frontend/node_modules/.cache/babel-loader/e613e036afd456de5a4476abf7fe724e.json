{"ast":null,"code":"/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n  return loading;\n}\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */geometry.getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom( /** @type {import(\"../geom/SimpleGeometry.js\").default} */geometry, feature, style.getRenderer());\n}\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}","map":{"version":3,"names":["getUid","ImageState","GeometryType","ReplayType","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","parseInt","getSquaredTolerance","resolution","pixelRatio","tolerance","getTolerance","replayGroup","geometry","style","feature","fillStyle","getFill","strokeStyle","getStroke","circleReplay","getReplay","getZIndex","CIRCLE","setFillStrokeStyle","drawCircle","textStyle","getText","textReplay","TEXT","setTextStyle","addDeclutter","drawText","renderFeature","squaredTolerance","listener","thisArg","loading","imageStyle","getImage","imageState","getImageState","LOADED","ERROR","unlistenImageChange","IDLE","load","listenImageChange","renderFeatureInternal","getGeometryFunction","simplifiedGeometry","getSimplifiedGeometry","renderer","getRenderer","renderGeometry","geometryRenderer","getType","GEOMETRY_COLLECTION","geometries","getGeometries","i","ii","length","replay","DEFAULT","drawCustom","getGeometriesArray","lineStringReplay","LINE_STRING","drawLineString","drawMultiLineString","polygonReplay","POLYGON","drawMultiPolygon","imageReplay","IMAGE","setImageStyle","drawPoint","drawMultiPoint","drawPolygon"],"sources":["../../../src/ol/renderer/vector.js"],"sourcesContent":["/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}