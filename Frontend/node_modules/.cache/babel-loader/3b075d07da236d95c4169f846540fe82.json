{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movies\\\\frontend_ora\\\\react-website-v1\\\\src\\\\components\\\\pages\\\\MapWithLocation.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport axios from 'axios';\nimport './map.css';\nclass MapWithLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: null,\n      lng: null,\n      locations: [],\n      hospitals: [],\n      garages: [],\n      query: '',\n      filteredLocations: []\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    let lat, lng;\n    navigator.geolocation.getCurrentPosition(position => {\n      if (this._isMounted) {\n        lat: position.coords.latitude;\n        lng: position.coords.longitude;\n        this.setState({\n          lat,\n          lng\n        });\n        const {\n          lat,\n          lng\n        } = position.coords;\n      }\n    }, () => {\n      console.log('Error getting current position');\n    });\n    axios.get('http://localhost:5000/api/locations/hospitals').then(response => {\n      if (this._isMounted) {\n        const {\n          data\n        } = response;\n        const locations = data.map(location => {\n          const R = 6371e3; // metres\n          const φ1 = lat * Math.PI / 180; // φ, λ in radians\n          const φ2 = location.lat * Math.PI / 180;\n          const Δφ = (location.lat - lat) * Math.PI / 180;\n          const Δλ = (location.lng - lng) * Math.PI / 180;\n          const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n          const distance = Math.round(R * c / 1000);\n          return {\n            ...location,\n            distance\n          };\n        });\n        this.setState({\n          locations,\n          filteredLocations: locations\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  handleSearch(event) {\n    const query = event.target.value;\n    const {\n      locations\n    } = this.state;\n    const filteredLocations = locations.filter(location => location.name.toLowerCase().includes(query.toLowerCase()));\n    this.setState({\n      query: query,\n      filteredLocations: filteredLocations\n    });\n  }\n  render() {\n    const {\n      google\n    } = this.props;\n    const {\n      lat,\n      lng,\n      filteredLocations,\n      hospitals,\n      garages,\n      query,\n      locations\n    } = this.state;\n    if (!lat || !lng) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n    const mapStyles = {\n      width: '65%',\n      height: '90%',\n      position: 'fixed',\n      right: 0,\n      top: 0,\n      // margin: '0 20px 0 0', // added margin\n      border: '1px solid #ccc',\n      // add border\n      borderRadius: '5px' // add border radius\n    };\n\n    const mapOptions = {\n      center: {\n        lat,\n        lng\n      },\n      zoom: 16\n    };\n    const searchStyles = {\n      width: '50%',\n      height: '100%',\n      padding: '10px',\n      boxSizing: 'border-box',\n      margin: '0 0 0 20px' // added margin\n    };\n\n    const nearbyPlacesStyles = {\n      width: '50%',\n      height: '100%',\n      padding: '10px',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n    const containerStyles = {\n      display: 'flex',\n      height: '100vh'\n    };\n\n    // Calculate distance between two points using the Haversine formula\n\n    const handleLocationClick = location => {\n      window.location.href = '/order';\n    };\n    const filteredNames = filteredLocations.map(location => location.name);\n    const allNames = locations.map(location => location.name);\n    const namesToDisplay = query ? filteredNames : allNames;\n    const locationToDisplay = query ? filteredLocations : locations;\n\n    //     return (\n    //       <div style={containerStyles}>\n    //         <div style={searchStyles}>\n    //           <input\n    //             type=\"text\"\n    //             placeholder=\"Search for a location\"\n    //             value={this.state.query}\n    //             onChange={this.handleSearch}\n    //             style={{ width: '100%', padding: '10px', marginBottom: '10px' }}\n    //           />\n    //           <h2>Nearby Places</h2>\n    //           <div>\n    //             {locationToDisplay.map((location, index) => (\n    //               <div className=\"nameBar\" key={`name-${index}`}\n    //               // onClick={() => {\n    //               //   const location = locations.find((loc) => loc.name === name);\n    //               //   handleLocationClick(location);\n    //               // }}\n    //               >\n    //                 {/* <a href={`/order/${location.id}`}>{location.name}</a>  */}\n    //                 <p>Distance: {location.distance} km</p>\n    //                 {/* {name} */}\n    //               </div>\n    //             ))}\n    //           </div>\n    //         </div>\n\n    //         <div style={{ width: '50%', height: '100vh', margin: '10px' }}>\n    //           <Map\n    //             google={google}\n    //             zoom={14}\n    //             style={mapStyles}\n    //             initialCenter={mapOptions.center}\n    //             center={{ lat, lng }}\n    //           >\n    //               <Marker\n    //               position={{ lat, lng }}\n    //               icon={{\n    //                 url: 'https://maps.google.com/mapfiles/ms/icons/blue.png',\n    //               }}\n    //             />\n    //             {filteredLocations.map((location, index) => (\n    //               <Marker\n    //                 key={`location-${index}`}\n    //                 position={{ lat: location.lat, lng: location.lng }}\n    //                 title={location.name}\n    //                 icon={\n    //                   location.type === 'hospital' ? 'https://maps.google.com/mapfiles/ms/icons/hospitals.png' :\n    //                   location.type === 'garage' ? 'https://maps.google.com/mapfiles/ms/icons/blue.png' :\n    //                   location.type === 'petrol pump' ? 'https://maps.google.com/mapfiles/ms/icons/gas.png' :\n    //                   null\n    //                 }/>))}\n    //           </Map>\n    //         </div>\n\n    //         <div style={nearbyPlacesStyles}>\n\n    //         </div>\n    //       </div>);\n    //   }\n    // }  \n\n    // export default GoogleApiWrapper({\n    //   apiKey: 'AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY',\n    // })(MapWithLocation);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: searchStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search locations\",\n      value: query,\n      onChange: this.handleSearch,\n      style: {\n        width: '100%',\n        height: '100%',\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '50%',\n        textAlign: 'center',\n        margin: '10px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"hospitals\",\n      name: \"hospitals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"hospitals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, \"Hospitals\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '50%',\n        textAlign: 'center',\n        margin: '10px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"garages\",\n      name: \"garages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"garages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }, \"Garages\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 'calc(100% - 70px)',\n        overflowY: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, filteredLocations.map(location => /*#__PURE__*/React.createElement(\"div\", {\n      key: location._id,\n      style: {\n        marginBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, location.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, location.address), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, `${location.distance} km away`))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: google,\n      zoom: 16,\n      style: mapStyles,\n      options: mapOptions,\n      initialCenter: {\n        lat,\n        lng\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      position: {\n        lat,\n        lng\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }), filteredLocations.map(location => /*#__PURE__*/React.createElement(Marker, {\n      key: location._id,\n      position: {\n        lat: location.lat,\n        lng: location.lng\n      },\n      name: location.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      style: nearbyPlacesStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 5\n      }\n    }, filteredLocations.map(location => /*#__PURE__*/React.createElement(\"div\", {\n      key: location._id,\n      style: {\n        marginBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }\n    }, location.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    }, location.address), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, `${location.distance} km away`)))));\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY'\n})(MapWithLocation);","map":{"version":3,"names":["React","Component","Map","GoogleApiWrapper","Marker","axios","MapWithLocation","constructor","props","state","lat","lng","locations","hospitals","garages","query","filteredLocations","handleSearch","bind","componentDidMount","_isMounted","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setState","console","log","get","then","response","data","map","location","R","φ1","Math","PI","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","distance","round","catch","error","componentWillUnmount","event","target","value","filter","name","toLowerCase","includes","render","google","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapStyles","width","height","right","top","border","borderRadius","mapOptions","center","zoom","searchStyles","padding","boxSizing","margin","nearbyPlacesStyles","overflow","containerStyles","display","handleLocationClick","window","href","filteredNames","allNames","namesToDisplay","locationToDisplay","style","type","placeholder","onChange","flexDirection","textAlign","id","htmlFor","overflowY","key","_id","marginBottom","address","options","initialCenter","apiKey"],"sources":["D:/Movies/frontend_ora/react-website-v1/src/components/pages/MapWithLocation.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\nimport axios from 'axios';\r\nimport './map.css';\r\n\r\nclass MapWithLocation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lat: null,\r\n      lng: null,\r\n      locations:[],\r\n      hospitals: [],\r\n      garages: [],\r\n      query: '',\r\n      filteredLocations: [],\r\n    };\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    let lat, lng;\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        if(this._isMounted) {\r\n          lat: position.coords.latitude;\r\n          lng: position.coords.longitude;\r\n          this.setState({\r\n            lat,\r\n            lng,\r\n            \r\n          });\r\n          const { lat, lng } = position.coords;}},\r\n\r\n      () => {console.log('Error getting current position');});\r\n  \r\n    axios.get('http://localhost:5000/api/locations/hospitals')\r\n      .then(response => {\r\n        if (this._isMounted){\r\n          const { data } = response;\r\n          const locations = data.map((location) => {\r\n            const R = 6371e3; // metres\r\n            const φ1 = (lat * Math.PI) / 180; // φ, λ in radians\r\n            const φ2 = (location.lat * Math.PI) / 180;\r\n            const Δφ = ((location.lat - lat) * Math.PI) / 180;\r\n            const Δλ = ((location.lng - lng) * Math.PI) / 180;\r\n            const a =\r\n              Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n              Math.cos(φ1) *\r\n                Math.cos(φ2) *\r\n                Math.sin(Δλ / 2) *\r\n                Math.sin(Δλ / 2);\r\n            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n            const distance = Math.round((R * c) / 1000);\r\n            return { ...location, distance };\r\n          });\r\n          this.setState({\r\n            locations,\r\n            filteredLocations: locations,});}})\r\n      .catch(error => {\r\n        console.log(error);});\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    this._isMounted = false;}\r\n\r\n  handleSearch(event) {\r\n    const query = event.target.value;\r\n    const { locations } = this.state;\r\n    const filteredLocations = locations.filter((location) =>\r\n      location.name.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    this.setState({\r\n      query: query,\r\n      filteredLocations: filteredLocations,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { google } = this.props;\r\n    const { lat, lng, filteredLocations, hospitals, garages, query, locations } = this.state;\r\n  \r\n    if (!lat || !lng) {\r\n      return <div>Loading...</div>;\r\n    }\r\n  \r\n    const mapStyles = {\r\n      width: '65%',\r\n      height: '90%',\r\n      position: 'fixed',\r\n      right: 0,\r\n      top: 0,\r\n      // margin: '0 20px 0 0', // added margin\r\n      border: '1px solid #ccc', // add border\r\n      borderRadius: '5px', // add border radius\r\n    };\r\n  \r\n    const mapOptions = {\r\n      center: { lat, lng },\r\n      zoom: 16,\r\n    };\r\n  \r\n    const searchStyles = {\r\n      width: '50%',\r\n      height: '100%',\r\n      padding: '10px',\r\n      boxSizing: 'border-box',\r\n      margin: '0 0 0 20px', // added margin\r\n    };\r\n  \r\n    const nearbyPlacesStyles = {\r\n      width: '50%',\r\n      height: '100%',\r\n      padding: '10px',\r\n      boxSizing: 'border-box',\r\n      overflow: 'auto',\r\n    };\r\n  \r\n    const containerStyles = {\r\n      display: 'flex',\r\n      height: '100vh',\r\n    };\r\n\r\n    // Calculate distance between two points using the Haversine formula\r\n\r\n\r\n    const handleLocationClick = (location) => {\r\n      window.location.href = '/order';\r\n    }\r\n\r\n    const filteredNames = filteredLocations.map(location => location.name);\r\n    const allNames = locations.map(location => location.name);\r\n    const namesToDisplay = query ? filteredNames : allNames;\r\n\r\n    const locationToDisplay = query ? filteredLocations : locations;\r\n\r\n//     return (\r\n//       <div style={containerStyles}>\r\n//         <div style={searchStyles}>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search for a location\"\r\n//             value={this.state.query}\r\n//             onChange={this.handleSearch}\r\n//             style={{ width: '100%', padding: '10px', marginBottom: '10px' }}\r\n//           />\r\n//           <h2>Nearby Places</h2>\r\n//           <div>\r\n//             {locationToDisplay.map((location, index) => (\r\n//               <div className=\"nameBar\" key={`name-${index}`}\r\n//               // onClick={() => {\r\n//               //   const location = locations.find((loc) => loc.name === name);\r\n//               //   handleLocationClick(location);\r\n//               // }}\r\n//               >\r\n//                 {/* <a href={`/order/${location.id}`}>{location.name}</a>  */}\r\n//                 <p>Distance: {location.distance} km</p>\r\n//                 {/* {name} */}\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n  \r\n//         <div style={{ width: '50%', height: '100vh', margin: '10px' }}>\r\n//           <Map\r\n//             google={google}\r\n//             zoom={14}\r\n//             style={mapStyles}\r\n//             initialCenter={mapOptions.center}\r\n//             center={{ lat, lng }}\r\n//           >\r\n//               <Marker\r\n//               position={{ lat, lng }}\r\n//               icon={{\r\n//                 url: 'https://maps.google.com/mapfiles/ms/icons/blue.png',\r\n//               }}\r\n//             />\r\n//             {filteredLocations.map((location, index) => (\r\n//               <Marker\r\n//                 key={`location-${index}`}\r\n//                 position={{ lat: location.lat, lng: location.lng }}\r\n//                 title={location.name}\r\n//                 icon={\r\n//                   location.type === 'hospital' ? 'https://maps.google.com/mapfiles/ms/icons/hospitals.png' :\r\n//                   location.type === 'garage' ? 'https://maps.google.com/mapfiles/ms/icons/blue.png' :\r\n//                   location.type === 'petrol pump' ? 'https://maps.google.com/mapfiles/ms/icons/gas.png' :\r\n//                   null\r\n//                 }/>))}\r\n//           </Map>\r\n//         </div>\r\n  \r\n//         <div style={nearbyPlacesStyles}>\r\n          \r\n//         </div>\r\n//       </div>);\r\n//   }\r\n// }  \r\n\r\n// export default GoogleApiWrapper({\r\n//   apiKey: 'AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY',\r\n// })(MapWithLocation);\r\n\r\nreturn (\r\n  <div>\r\n    <div style={searchStyles}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search locations\"\r\n        value={query}\r\n        onChange={this.handleSearch}\r\n        style={{ width: '100%', height: '100%', padding: '10px' }}\r\n      />\r\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n        <div\r\n          style={{ width: '50%', textAlign: 'center', margin: '10px 0' }}\r\n        >\r\n          <input type=\"checkbox\" id=\"hospitals\" name=\"hospitals\" />\r\n          <label htmlFor=\"hospitals\">Hospitals</label>\r\n        </div>\r\n        <div\r\n          style={{ width: '50%', textAlign: 'center', margin: '10px 0' }}\r\n        >\r\n          <input type=\"checkbox\" id=\"garages\" name=\"garages\" />\r\n          <label htmlFor=\"garages\">Garages</label>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: 'calc(100% - 70px)', overflowY: 'auto' }}>\r\n        {filteredLocations.map((location) => (\r\n          <div key={location._id} style={{ marginBottom: '10px' }}>\r\n            <h4>{location.name}</h4>\r\n            <p>{location.address}</p>\r\n            <p>{`${location.distance} km away`}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    <div style={{ width: '100%', height: '100%' }}>\r\n      <Map\r\n        google={google}\r\n        zoom={16}\r\n        style={mapStyles}\r\n        options={mapOptions}\r\n        initialCenter={{ lat, lng }}\r\n      >\r\n        <Marker position={{ lat, lng }} />\r\n        {filteredLocations.map((location) => (\r\n          <Marker\r\n            key={location._id}\r\n            position={{ lat: location.lat, lng: location.lng }}\r\n            name={location.name}\r\n          />\r\n        ))}\r\n      </Map>\r\n    </div>\r\n    <div style={nearbyPlacesStyles}>\r\n      {filteredLocations.map((location) => (\r\n        <div key={location._id} style={{ marginBottom: '10px' }}>\r\n          <h4>{location.name}</h4>\r\n          <p>{location.address}</p>\r\n          <p>{`${location.distance} km away`}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n}\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY',\r\n})(MapWithLocation);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}