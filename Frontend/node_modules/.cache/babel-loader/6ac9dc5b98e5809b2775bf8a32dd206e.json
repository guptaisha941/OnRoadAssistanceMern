{"ast":null,"code":"/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport { TRUE } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport { get as getProjection } from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /*@__PURE__*/function (Event) {\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n    Event.call(this, type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n  }\n  if (Event) DragAndDropEvent.__proto__ = Event;\n  DragAndDropEvent.prototype = Object.create(Event && Event.prototype);\n  DragAndDropEvent.prototype.constructor = DragAndDropEvent;\n  return DragAndDropEvent;\n}(Event);\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /*@__PURE__*/function (Interaction) {\n  function DragAndDrop(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Interaction.call(this, {\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"../format/Feature.js\").default>}\n     */\n    this.formatConstructors_ = options.formatConstructors ? options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection ? getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n  }\n  if (Interaction) DragAndDrop.__proto__ = Interaction;\n  DragAndDrop.prototype = Object.create(Interaction && Interaction.prototype);\n  DragAndDrop.prototype.constructor = DragAndDrop;\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  DragAndDrop.prototype.handleResult_ = function handleResult_(file, event) {\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n    var formatConstructors = this.formatConstructors_;\n    var features = [];\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      var format = new formatConstructors[i]();\n      features = this.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.registerListeners_ = function registerListeners_() {\n    var map = this.getMap();\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [listen(dropArea, EventType.DROP, handleDrop, this), listen(dropArea, EventType.DRAGENTER, handleStop, this), listen(dropArea, EventType.DRAGOVER, handleStop, this), listen(dropArea, EventType.DROP, handleStop, this)];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setActive = function setActive(active) {\n    Interaction.prototype.setActive.call(this, active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setMap = function setMap(map) {\n    this.unregisterListeners_();\n    Interaction.prototype.setMap.call(this, map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_(format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.unregisterListeners_ = function unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n  return DragAndDrop;\n}(Interaction);\n\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n  var files = event.dataTransfer.files;\n  for (var i = 0, ii = files.length; i < ii; ++i) {\n    var file = files.item(i);\n    var reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\nexport default DragAndDrop;","map":{"version":3,"names":["TRUE","listen","unlistenByKey","Event","EventType","Interaction","get","getProjection","DragAndDropEventType","ADD_FEATURES","DragAndDropEvent","type","file","opt_features","opt_projection","call","features","projection","prototype","constructor","DragAndDrop","opt_options","options","handleEvent","formatConstructors_","formatConstructors","projection_","dropListenKeys_","source_","source","target","handleResult_","event","result","map","getMap","view","getView","i","ii","length","format","tryReadFeatures_","featureProjection","clear","addFeatures","dispatchEvent","registerListeners_","dropArea","getViewport","DROP","handleDrop","DRAGENTER","handleStop","DRAGOVER","setActive","active","unregisterListeners_","setMap","getActive","text","readFeatures","e","forEach","files","dataTransfer","item","reader","FileReader","addEventListener","LOAD","bind","readAsText","stopPropagation","preventDefault","dropEffect"],"sources":["../../../src/ol/interaction/DragAndDrop.js"],"sourcesContent":["/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nclass DragAndDropEvent extends Event {\n\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"../format/Feature.js\").default>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    const formatConstructors = this.formatConstructors_;\n    let features = [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      const format = new formatConstructors[i]();\n      features = this.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    super.setActive(active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}