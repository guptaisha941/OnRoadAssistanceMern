{"ast":null,"code":"/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get(src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set(src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();","map":{"version":3,"names":["asString","IconImageCache","cache_","cacheSize_","maxCacheSize_","prototype","clear","expire","i","key","iconImage","hasListener","get","src","crossOrigin","color","getKey","set","setSize","maxCacheSize","colorString","shared"],"sources":["../../../src/ol/style/IconImageCache.js"],"sourcesContent":["/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n\n    /**\n    * @type {!Object<string, import(\"./IconImage.js\").default>}\n    * @private\n    */\n    this.cache_ = {};\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.cacheSize_ = 0;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  expire() {\n    if (this.cacheSize_ > this.maxCacheSize_) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {import(\"../color.js\").Color} color Color.\n  * @return {import(\"./IconImage.js\").default} Icon image.\n  */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {import(\"../color.js\").Color} color Color.\n  * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n  */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n  * Set the cache size of the icon cache. Default is `32`. Change this value when\n  * your map uses more than 32 different icon images and you are not caching icon\n  * styles on the application level.\n  * @param {number} maxCacheSize Cache max size.\n  * @api\n  */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n"],"mappings":"AAAA;;;AAGA,SAAQA,QAAQ,QAAO,aAAa;;;;;;AAMpC,IAAMC,cAAc,GAClB,SAAAA,cAAWA,CAAA,EAAG;EAEd;;;;EAIA,IAAM,CAACC,MAAM,GAAG,EAAE;;EAElB;;;;EAIA,IAAM,CAACC,UAAU,GAAG,CAAC;;EAErB;;;;EAIA,IAAM,CAACC,aAAa,GAAG,EAAE;AAC3B,CAAE;;AAEF;AACA;AACA;AACAH,cAAA,CAAAI,SAAA,CAAEC,KAAA,YAAAA,MAAA,EAAQ;EACR,IAAM,CAACJ,MAAM,GAAG,EAAE;EAClB,IAAM,CAACC,UAAU,GAAG,CAAC;AACvB,CAAE;;AAEF;AACA;AACA;AACAF,cAAA,CAAAI,SAAA,CAAEE,MAAA,YAAAA,OAAA,EAAS;EACT,IAAM,IAAI,CAACJ,UAAU,GAAG,IAAI,CAACC,aAAa,EAAE;IAC1C,IAAMI,CAAC,GAAG,CAAC;IACX,KAAO,IAAMC,GAAG,IAAI,IAAI,CAACP,MAAM,EAAE;MAC/B,IAAQQ,SAAS,GAAG,IAAI,CAACR,MAAM,CAACO,GAAG,CAAC;MACpC,IAAM,CAACD,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAACE,SAAS,CAACC,WAAW,EAAE,EAAE;QACjD,OAAS,IAAI,CAACT,MAAM,CAACO,GAAG,CAAC;QACzB,EAAI,IAAI,CAACN,UAAU;MACrB;IACF;EACF;AACF,CAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAF,cAAA,CAAAI,SAAA,CAAEO,GAAA,YAAAA,IAAIC,GAAG,EAAEC,WAAW,EAAEC,KAAK,EAAE;EAC7B,IAAQN,GAAG,GAAGO,MAAM,CAACH,GAAG,EAAEC,WAAW,EAAEC,KAAK,CAAC;EAC7C,OAASN,GAAG,IAAI,IAAI,CAACP,MAAM,GAAG,IAAI,CAACA,MAAM,CAACO,GAAG,CAAC,GAAG,IAAI;AACvD,CAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAR,cAAA,CAAAI,SAAA,CAAEY,GAAA,YAAAA,IAAIJ,GAAG,EAAEC,WAAW,EAAEC,KAAK,EAAEL,SAAS,EAAE;EACxC,IAAQD,GAAG,GAAGO,MAAM,CAACH,GAAG,EAAEC,WAAW,EAAEC,KAAK,CAAC;EAC7C,IAAM,CAACb,MAAM,CAACO,GAAG,CAAC,GAAGC,SAAS;EAC9B,EAAI,IAAI,CAACP,UAAU;AACrB,CAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACAF,cAAA,CAAAI,SAAA,CAAEa,OAAA,YAAAA,QAAQC,YAAY,EAAE;EACtB,IAAM,CAACf,aAAa,GAAGe,YAAY;EACnC,IAAM,CAACZ,MAAM,EAAE;AACjB,CAAG;;;;;;;;AAUH,SAASS,MAAMA,CAACH,GAAG,EAAEC,WAAW,EAAEC,KAAK,EAAE;EACvC,IAAMK,WAAW,GAAGL,KAAK,GAAGf,QAAQ,CAACe,KAAK,CAAC,GAAG,MAAM;EACpD,OAAOD,WAAW,GAAG,GAAG,GAAGD,GAAG,GAAG,GAAG,GAAGO,WAAW;;AAIpD,eAAenB,cAAc;;;;;;;AAQ7B,OAAO,IAAMoB,MAAM,GAAG,IAAIpB,cAAc,EAAE"},"metadata":{},"sourceType":"module"}