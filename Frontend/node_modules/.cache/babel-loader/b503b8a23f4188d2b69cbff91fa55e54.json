{"ast":null,"code":"/**\n * @module ol/dom\n */\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return (/** @type {CanvasRenderingContext2D} */canvas.getContext('2d')\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}","map":{"version":3,"names":["createCanvasContext2D","opt_width","opt_height","canvas","document","createElement","width","height","getContext","outerWidth","element","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild"],"sources":["../../src/ol/dom.js"],"sourcesContent":["/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;AAWA,OAAO,SAASA,qBAAqBA,CAACC,SAAS,EAAEC,UAAU,EAAE;EAC3D,IAAMC,MAAM,mCAAqCC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAE;EAClF,IAAIJ,SAAS,EAAE;IACbE,MAAM,CAACG,KAAK,GAAGL,SAAS;;EAE1B,IAAIC,UAAU,EAAE;IACdC,MAAM,CAACI,MAAM,GAAGL,UAAU;;EAE5B,+CAAgDC,MAAM,CAACK,UAAU,CAAC,IAAI;EAAC;;;;;;;;;;AAWzE,OAAO,SAASC,UAAUA,CAACC,OAAO,EAAE;EAClC,IAAIJ,KAAK,GAAGI,OAAO,CAACC,WAAW;EAC/B,IAAMC,KAAK,GAAGC,gBAAgB,CAACH,OAAO,CAAC;EACvCJ,KAAK,IAAIQ,QAAQ,CAACF,KAAK,CAACG,UAAU,EAAE,EAAE,CAAC,GAAGD,QAAQ,CAACF,KAAK,CAACI,WAAW,EAAE,EAAE,CAAC;EAEzE,OAAOV,KAAK;;;;;;;;;;AAWd,OAAO,SAASW,WAAWA,CAACP,OAAO,EAAE;EACnC,IAAIH,MAAM,GAAGG,OAAO,CAACQ,YAAY;EACjC,IAAMN,KAAK,GAAGC,gBAAgB,CAACH,OAAO,CAAC;EACvCH,MAAM,IAAIO,QAAQ,CAACF,KAAK,CAACO,SAAS,EAAE,EAAE,CAAC,GAAGL,QAAQ,CAACF,KAAK,CAACQ,YAAY,EAAE,EAAE,CAAC;EAE1E,OAAOb,MAAM;;;;;;;AAOf,OAAO,SAASc,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAC5C,IAAMC,MAAM,GAAGD,OAAO,CAACE,UAAU;EACjC,IAAID,MAAM,EAAE;IACVA,MAAM,CAACE,YAAY,CAACJ,OAAO,EAAEC,OAAO,CAAC;;;;;;;;AAQzC,OAAO,SAASI,UAAUA,CAACC,IAAI,EAAE;EAC/B,OAAOA,IAAI,IAAIA,IAAI,CAACH,UAAU,GAAGG,IAAI,CAACH,UAAU,CAACI,WAAW,CAACD,IAAI,CAAC,GAAG,IAAI;;;;;;AAM3E,OAAO,SAASE,cAAcA,CAACF,IAAI,EAAE;EACnC,OAAOA,IAAI,CAACG,SAAS,EAAE;IACrBH,IAAI,CAACC,WAAW,CAACD,IAAI,CAACG,SAAS,CAAC"},"metadata":{},"sourceType":"module"}