{"ast":null,"code":"/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function () {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = ('geolocation' in navigator);\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = ('ontouchstart' in window);\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = ('PointerEvent' in window);\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!navigator.msPointerEnabled;\nexport { HAS as WEBGL } from './webgl.js';","map":{"version":3,"names":["ua","navigator","userAgent","toLowerCase","FIREFOX","indexOf","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","window","devicePixelRatio","CANVAS_LINE_DASH","has","document","createElement","getContext","setLineDash","e","GEOLOCATION","TOUCH","POINTER","MSPOINTER","msPointerEnabled","HAS","WEBGL"],"sources":["../../src/ol/has.js"],"sourcesContent":["/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport const CANVAS_LINE_DASH = function() {\n  let has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport const GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport const TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport const POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n"],"mappings":"AAAA;;;;AAIA,IAAMA,EAAE,GAAG,OAAOC,SAAS,KAAK,WAAW,GACzCA,SAAS,CAACC,SAAS,CAACC,WAAW,EAAE,GAAG,EAAE;;;;;;AAMxC,OAAO,IAAMC,OAAO,GAAGJ,EAAE,CAACK,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;;;;;AAMnD,OAAO,IAAMC,MAAM,GAAGN,EAAE,CAACK,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAIL,EAAE,CAACK,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;;;;;AAM9E,OAAO,IAAME,MAAM,GAAGP,EAAE,CAACK,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAIL,EAAE,CAACK,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;;;;;AAM7E,OAAO,IAAMG,GAAG,GAAGR,EAAE,CAACK,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;;;;;;;;AAUjD,OAAO,IAAMI,kBAAkB,GAAGC,MAAM,CAACC,gBAAgB,IAAI,CAAC;;;;;;AAO9D,OAAO,IAAMC,gBAAgB,GAAG,YAAW;EACzC,IAAIC,GAAG,GAAG,KAAK;EACf,IAAI;IACFA,GAAG,GAAG,CAAC,CAACC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC,CAACC,WAAW;GACtE,CAAC,OAAOC,CAAC,EAAE;;;EAGZ,OAAOL,GAAG;CACX,EAAE;;;;;;;;AASH,OAAO,IAAMM,WAAW,IAAG,aAAa,IAAIlB,SAAS;;;;;;;;AASrD,OAAO,IAAMmB,KAAK,IAAG,cAAc,IAAIV,MAAM;;;;;;;AAQ7C,OAAO,IAAMW,OAAO,IAAG,cAAc,IAAIX,MAAM;;;;;;;AAQ/C,OAAO,IAAMY,SAAS,GAAG,CAAC,CAAErB,SAAS,CAACsB,gBAAiB;AAGvD,SAAQC,GAAG,IAAIC,KAAK,QAAO,YAAY"},"metadata":{},"sourceType":"module"}