{"ast":null,"code":"/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\nvar MouseSource = /*@__PURE__*/function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n  if (EventSource) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create(EventSource && EventSource.prototype);\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_(inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel(inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse() {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n  return MouseSource;\n}(EventSource);\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function () {\n    inEvent.preventDefault();\n    pd();\n  };\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n  return e;\n}\nexport default MouseSource;","map":{"version":3,"names":["EventSource","POINTER_ID","POINTER_TYPE","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","toString","pointerMap","cancel","e","prepareEvent","dispatcher","down","mousemove","move","mouseup","p","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","mapping","call","lastTouches","lts","x","clientX","y","clientY","i","l","length","t","dx","Math","abs","dy","cloneEvent","pd","preventDefault","pointerId","isPrimary","pointerType"],"sources":["../../../src/ol/pointer/MouseSource.js"],"sourcesContent":["/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport const POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport const POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nconst DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      const e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nclass MouseSource extends EventSource {\n\n  /**\n   * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n   */\n  constructor(dispatcher) {\n    const mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    super(dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  isEventSimulatedFromTouch_(inEvent) {\n    const lts = this.lastTouches;\n    const x = inEvent.clientX;\n    const y = inEvent.clientY;\n    for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      const dx = Math.abs(x - t[0]);\n      const dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  cancel(inEvent) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  }\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  cleanupMouse() {\n    delete this.pointerMap[POINTER_ID.toString()];\n  }\n}\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  const pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}