{"ast":null,"code":"/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n  if (Interaction) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create(Interaction && Interaction.prototype);\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n  return DoubleClickZoom;\n}(Interaction);\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */mapBrowserEvent.originalEvent;\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\nexport default DoubleClickZoom;","map":{"version":3,"names":["MapBrowserEventType","Interaction","zoomByDelta","DoubleClickZoom","opt_options","call","handleEvent","options","delta_","delta","duration_","duration","undefined","prototype","constructor","mapBrowserEvent","stopEvent","type","DBLCLICK","browserEvent","originalEvent","map","anchor","coordinate","shiftKey","view","getView","preventDefault"],"sources":["../../../src/ol/interaction/DoubleClickZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n"],"mappings":"AAAA;;;AAGA,OAAOA,mBAAmB,MAAM,2BAA2B;AAC3D,OAAOC,WAAW,IAAGC,WAAW,QAAO,kBAAkB;;;;;;;;;;;;;AAezD,IAAMC,eAAe,GAAoB,uBAAAF,WAAA;EAKvC,SAAAE,eAAWA,CAACC,WAAW,EAAE;IACvBH,WAAA,CAAAI,IAAK,OAAC;MACJC,WAAW,EAAEA;KACd,CAAC;IAEF,IAAMC,OAAO,GAAGH,WAAW,GAAGA,WAAW,GAAG,EAAE;;;;;;IAM9C,IAAI,CAACI,MAAM,GAAGD,OAAO,CAACE,KAAK,GAAGF,OAAO,CAACE,KAAK,GAAG,CAAC;;;;;;IAM/C,IAAI,CAACC,SAAS,GAAGH,OAAO,CAACI,QAAQ,KAAKC,SAAS,GAAGL,OAAO,CAACI,QAAQ,GAAG,GAAG;;;;iBAEzE,CAAAE,SAAA,CAAAC,WAAA,GAAAX,eAAA;;EAxB2BF,WAAA;;;;;;;;;AAoC9B,SAASK,WAAWA,CAACS,eAAe,EAAE;EACpC,IAAIC,SAAS,GAAG,KAAK;EACrB,IAAID,eAAe,CAACE,IAAI,IAAIjB,mBAAmB,CAACkB,QAAQ,EAAE;IACxD,IAAMC,YAAY,4BAA8BJ,eAAe,CAACK,aAAc;IAC9E,IAAMC,GAAG,GAAGN,eAAe,CAACM,GAAG;IAC/B,IAAMC,MAAM,GAAGP,eAAe,CAACQ,UAAU;IACzC,IAAMd,KAAK,GAAGU,YAAY,CAACK,QAAQ,GAAG,CAAC,IAAI,CAAChB,MAAM,GAAG,IAAI,CAACA,MAAM;IAChE,IAAMiB,IAAI,GAAGJ,GAAG,CAACK,OAAO,EAAE;IAC1BxB,WAAW,CAACuB,IAAI,EAAEhB,KAAK,EAAEa,MAAM,EAAE,IAAI,CAACZ,SAAS,CAAC;IAChDK,eAAe,CAACY,cAAc,EAAE;IAChCX,SAAS,GAAG,IAAI;;EAElB,OAAO,CAACA,SAAS;;AAGnB,eAAeb,eAAe"},"metadata":{},"sourceType":"module"}