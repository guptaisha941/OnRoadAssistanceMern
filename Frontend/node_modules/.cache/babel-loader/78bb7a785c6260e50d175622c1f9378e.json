{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import Map from \"ol/Map\";\n// import View from \"ol/View\";\n// import TileLayer from \"ol/layer/Tile\";\n// import OSM from \"ol/source/OSM\";\n// import Feature from \"ol/Feature\";\n// import Point from \"ol/geom/Point\";\n// import { fromLonLat } from \"ol/proj\";\n// import VectorLayer from \"ol/layer/Vector\";\n// import VectorSource from \"ol/source/Vector\";\n// // import { Icon } from 'ol/style';\n// import { Icon, Style } from 'ol/style';  // Import Style and Icon from ol/style\n\n// const MapWithLocation = () => {\n//   const [map, setMap] = useState(null);\n\n//   useEffect(() => {\n//     const initialMap = new Map({\n//       target: \"map-container\",\n//       layers: [\n//         new TileLayer({\n//           source: new OSM(),\n//         }),\n//       ],\n//       view: new View({\n//         center: fromLonLat([0, 0]),\n//         zoom: 2,\n//       }),\n//     });\n//     setMap(initialMap);\n//   }, []);\n\n//   useEffect(() => {\n//     if (map) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           const longitude = position.coords.longitude;\n//           const latitude = position.coords.latitude;\n\n//           // Create a marker for your location\n//           const marker = new Feature({\n//             geometry: new Point(fromLonLat([longitude, latitude])),\n//           });\n\n//           // Create a new style for the marker using IconStyle\n//           const iconStyle = new Style({\n//             image: new Icon({\n//               src: \"https://openlayers.org/en/latest/examples/data/icon.png\",\n//             }),\n//           });\n\n//           // Create a vector source and add the marker feature to it\n//           const vectorSource = new VectorSource({\n//             features: [marker],\n//           });\n//           marker.setStyle(iconStyle);\n\n//           // Add the vector layer to the map\n//           const vectorLayer = new VectorLayer({\n//             source: vectorSource,\n//           });\n//           map.addLayer(vectorLayer);\n\n//           // Set the view to your location\n//           map.getView().setCenter(fromLonLat([longitude, latitude]));\n//           map.getView().setZoom(15);\n//         },\n//         (error) => {\n//           console.error(error);\n//         }\n//       );\n//     }\n//   }, [map]);\n\n//   return <div id=\"map-container\" style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapWithLocation;\n\n// *********************************OPEN LAYERS CODE********************************************************\n\n// import React, { Component } from 'react';\n// import { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\n// class MapContainer extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       lat: null,\n//       lng: null,\n//     };\n//   }\n\n//   componentDidMount() {\n//     navigator.geolocation.getCurrentPosition(\n//       (position) => {\n//         this.setState({\n//           lat: position.coords.latitude,\n//           lng: position.coords.longitude,\n//         });\n//       },\n//       () => {\n//         console.log('Error getting current position');\n//       }\n//     );\n//   }\n\n//   render() {\n//     const { lat, lng } = this.state;\n\n//     if (!lat || !lng) {\n//       return <div>Loading...</div>;\n//     }\n\n//     const mapStyles = {\n//       width: '100%',\n//       height: '500px',\n//     };\n\n//     const mapOptions = {\n//       center: { lat, lng },\n//       zoom: 16,\n//     };\n\n//     return (\n//       <Map\n//         google={this.props.google}\n//         zoom={mapOptions.zoom}\n//         style={mapStyles}\n//         initialCenter={mapOptions.center}\n//       >\n//         <Marker position={{ lat, lng }} />\n//       </Map>\n//     );\n//   }\n// }\n\n// export default GoogleApiWrapper({\n//   apiKey: 'AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY',\n// })(MapContainer);","map":{"version":3,"names":[],"sources":["D:/demo_one/react-website-v1/src/components/pages/MapWithLocation.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Map from \"ol/Map\";\r\n// import View from \"ol/View\";\r\n// import TileLayer from \"ol/layer/Tile\";\r\n// import OSM from \"ol/source/OSM\";\r\n// import Feature from \"ol/Feature\";\r\n// import Point from \"ol/geom/Point\";\r\n// import { fromLonLat } from \"ol/proj\";\r\n// import VectorLayer from \"ol/layer/Vector\";\r\n// import VectorSource from \"ol/source/Vector\";\r\n// // import { Icon } from 'ol/style';\r\n// import { Icon, Style } from 'ol/style';  // Import Style and Icon from ol/style\r\n\r\n// const MapWithLocation = () => {\r\n//   const [map, setMap] = useState(null);\r\n  \r\n\r\n//   useEffect(() => {\r\n//     const initialMap = new Map({\r\n//       target: \"map-container\",\r\n//       layers: [\r\n//         new TileLayer({\r\n//           source: new OSM(),\r\n//         }),\r\n//       ],\r\n//       view: new View({\r\n//         center: fromLonLat([0, 0]),\r\n//         zoom: 2,\r\n//       }),\r\n//     });\r\n//     setMap(initialMap);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (map) {\r\n//       navigator.geolocation.getCurrentPosition(\r\n//         (position) => {\r\n//           const longitude = position.coords.longitude;\r\n//           const latitude = position.coords.latitude;\r\n\r\n//           // Create a marker for your location\r\n//           const marker = new Feature({\r\n//             geometry: new Point(fromLonLat([longitude, latitude])),\r\n//           });\r\n\r\n//           // Create a new style for the marker using IconStyle\r\n//           const iconStyle = new Style({\r\n//             image: new Icon({\r\n//               src: \"https://openlayers.org/en/latest/examples/data/icon.png\",\r\n//             }),\r\n//           });\r\n\r\n//           // Create a vector source and add the marker feature to it\r\n//           const vectorSource = new VectorSource({\r\n//             features: [marker],\r\n//           });\r\n//           marker.setStyle(iconStyle);\r\n\r\n//           // Add the vector layer to the map\r\n//           const vectorLayer = new VectorLayer({\r\n//             source: vectorSource,\r\n//           });\r\n//           map.addLayer(vectorLayer);\r\n\r\n//           // Set the view to your location\r\n//           map.getView().setCenter(fromLonLat([longitude, latitude]));\r\n//           map.getView().setZoom(15);\r\n//         },\r\n//         (error) => {\r\n//           console.error(error);\r\n//         }\r\n//       );\r\n//     }\r\n//   }, [map]);\r\n\r\n\r\n//   return <div id=\"map-container\" style={{ height: \"500px\" }}></div>;\r\n// };\r\n\r\n// export default MapWithLocation;\r\n\r\n// *********************************OPEN LAYERS CODE********************************************************\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\n// class MapContainer extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       lat: null,\r\n//       lng: null,\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       (position) => {\r\n//         this.setState({\r\n//           lat: position.coords.latitude,\r\n//           lng: position.coords.longitude,\r\n//         });\r\n//       },\r\n//       () => {\r\n//         console.log('Error getting current position');\r\n//       }\r\n//     );\r\n//   }\r\n\r\n//   render() {\r\n//     const { lat, lng } = this.state;\r\n\r\n//     if (!lat || !lng) {\r\n//       return <div>Loading...</div>;\r\n//     }\r\n\r\n//     const mapStyles = {\r\n//       width: '100%',\r\n//       height: '500px',\r\n//     };\r\n\r\n//     const mapOptions = {\r\n//       center: { lat, lng },\r\n//       zoom: 16,\r\n//     };\r\n\r\n//     return (\r\n//       <Map\r\n//         google={this.props.google}\r\n//         zoom={mapOptions.zoom}\r\n//         style={mapStyles}\r\n//         initialCenter={mapOptions.center}\r\n//       >\r\n//         <Marker position={{ lat, lng }} />\r\n//       </Map>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n// export default GoogleApiWrapper({\r\n//   apiKey: 'AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY',\r\n// })(MapContainer);\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA"},"metadata":{},"sourceType":"module"}