{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movies\\\\frontend_ora\\\\react-website-v1\\\\src\\\\components\\\\pages\\\\MapWithLocation.js\";\n// import React, { useEffect, useState } from \"react\";\n// import Map from \"ol/Map\";\n// import View from \"ol/View\";\n// import TileLayer from \"ol/layer/Tile\";\n// import OSM from \"ol/source/OSM\";\n// import Feature from \"ol/Feature\";\n// import Point from \"ol/geom/Point\";\n// import { fromLonLat } from \"ol/proj\";\n// import VectorLayer from \"ol/layer/Vector\";\n// import VectorSource from \"ol/source/Vector\";\n// // import { Icon } from 'ol/style';\n// import { Icon, Style } from 'ol/style';  // Import Style and Icon from ol/style\n\n// const MapWithLocation = () => {\n//   const [map, setMap] = useState(null);\n\n//   useEffect(() => {\n//     const initialMap = new Map({\n//       target: \"map-container\",\n//       layers: [\n//         new TileLayer({\n//           source: new OSM(),\n//         }),\n//       ],\n//       view: new View({\n//         center: fromLonLat([0, 0]),\n//         zoom: 2,\n//       }),\n//     });\n//     setMap(initialMap);\n//   }, []);\n\n//   useEffect(() => {\n//     if (map) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           const longitude = position.coords.longitude;\n//           const latitude = position.coords.latitude;\n\n//           // Create a marker for your location\n//           const marker = new Feature({\n//             geometry: new Point(fromLonLat([longitude, latitude])),\n//           });\n\n//           // Create a new style for the marker using IconStyle\n//           const iconStyle = new Style({\n//             image: new Icon({\n//               src: \"https://openlayers.org/en/latest/examples/data/icon.png\",\n//             }),\n//           });\n\n//           // Create a vector source and add the marker feature to it\n//           const vectorSource = new VectorSource({\n//             features: [marker],\n//           });\n//           marker.setStyle(iconStyle);\n\n//           // Add the vector layer to the map\n//           const vectorLayer = new VectorLayer({\n//             source: vectorSource,\n//           });\n//           map.addLayer(vectorLayer);\n\n//           // Set the view to your location\n//           map.getView().setCenter(fromLonLat([longitude, latitude]));\n//           map.getView().setZoom(15);\n//         },\n//         (error) => {\n//           console.error(error);\n//         }\n//       );\n//     }\n//   }, [map]);\n\n//   return <div id=\"map-container\" style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapWithLocation;\n\n// *********************************OPEN LAYERS CODE********************************************************\n\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport axios from 'axios';\nclass MapWithLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchNearbyPlaces = (lat, lng) => {\n      axios.get(`http://localhost:5000/api/nearby?lat=${lat}&lng=${lng}`).then(response => {\n        if (this._isMounted) {\n          this.setState({\n            nearbyPlaces: response.data\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    this.state = {\n      lat: null,\n      lng: null,\n      locations: [],\n      hospitals: [],\n      garages: [],\n      query: '',\n      filteredLocations: [],\n      nearbyPlaces: []\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    navigator.geolocation.watchPosition(position => {\n      if (this._isMounted) {\n        this.setState({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n        this.fetchNearbyPlaces(position.coords.latitude, position.coords.longitude);\n      }\n    }, () => {\n      console.log('Error getting current position');\n    });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  handleSearch(event) {\n    const query = event.target.value;\n    const {\n      locations\n    } = this.state;\n    const filteredLocations = locations.filter(location => location.name.toLowerCase().includes(query.toLowerCase()));\n    this.setState({\n      query: query,\n      filteredLocations: filteredLocations\n    });\n  }\n  render() {\n    const {\n      google\n    } = this.props;\n    const {\n      lat,\n      lng,\n      filteredLocations,\n      nearbyPlaces\n    } = this.state;\n    if (!lat || !lng) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n    const mapStyles = {\n      width: '50%',\n      height: '100%',\n      position: 'fixed',\n      right: 0,\n      top: 0,\n      margin: '0 20px 0 0' // added margin\n    };\n\n    const mapOptions = {\n      center: {\n        lat,\n        lng\n      },\n      zoom: 16\n    };\n    const searchStyles = {\n      width: '50%',\n      height: '100%',\n      padding: '10px',\n      boxSizing: 'border-box',\n      margin: '0 0 0 20px' // added margin\n    };\n\n    const nearbyPlacesStyles = {\n      width: '50%',\n      height: '100%',\n      padding: '10px',\n      boxSizing: 'border-box',\n      margin: '10px 0 0 20px' // added margin\n    };\n\n    const containerStyles = {\n      display: 'flex',\n      height: '100vh'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: containerStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: searchStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a location\",\n      value: this.state.query,\n      onChange: this.handleSearch,\n      style: {\n        width: '100%',\n        padding: '10px',\n        marginBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }), this.state.nearbyPlaces && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, \"Nearby Places\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, this.state.nearbyPlaces.map(place => /*#__PURE__*/React.createElement(\"li\", {\n      key: place.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 23\n      }\n    }, place.name), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 23\n      }\n    }), place.vicinity))))));\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY'\n})(MapWithLocation);","map":{"version":3,"names":["React","Component","Map","GoogleApiWrapper","Marker","axios","MapWithLocation","constructor","props","fetchNearbyPlaces","lat","lng","get","then","response","_isMounted","setState","nearbyPlaces","data","catch","error","console","log","state","locations","hospitals","garages","query","filteredLocations","handleSearch","bind","componentDidMount","navigator","geolocation","watchPosition","position","coords","latitude","longitude","componentWillUnmount","event","target","value","filter","location","name","toLowerCase","includes","render","google","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapStyles","width","height","right","top","margin","mapOptions","center","zoom","searchStyles","padding","boxSizing","nearbyPlacesStyles","containerStyles","display","style","type","placeholder","onChange","marginBottom","map","place","key","id","vicinity","apiKey"],"sources":["D:/Movies/frontend_ora/react-website-v1/src/components/pages/MapWithLocation.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Map from \"ol/Map\";\r\n// import View from \"ol/View\";\r\n// import TileLayer from \"ol/layer/Tile\";\r\n// import OSM from \"ol/source/OSM\";\r\n// import Feature from \"ol/Feature\";\r\n// import Point from \"ol/geom/Point\";\r\n// import { fromLonLat } from \"ol/proj\";\r\n// import VectorLayer from \"ol/layer/Vector\";\r\n// import VectorSource from \"ol/source/Vector\";\r\n// // import { Icon } from 'ol/style';\r\n// import { Icon, Style } from 'ol/style';  // Import Style and Icon from ol/style\r\n\r\n// const MapWithLocation = () => {\r\n//   const [map, setMap] = useState(null);\r\n  \r\n\r\n//   useEffect(() => {\r\n//     const initialMap = new Map({\r\n//       target: \"map-container\",\r\n//       layers: [\r\n//         new TileLayer({\r\n//           source: new OSM(),\r\n//         }),\r\n//       ],\r\n//       view: new View({\r\n//         center: fromLonLat([0, 0]),\r\n//         zoom: 2,\r\n//       }),\r\n//     });\r\n//     setMap(initialMap);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (map) {\r\n//       navigator.geolocation.getCurrentPosition(\r\n//         (position) => {\r\n//           const longitude = position.coords.longitude;\r\n//           const latitude = position.coords.latitude;\r\n\r\n//           // Create a marker for your location\r\n//           const marker = new Feature({\r\n//             geometry: new Point(fromLonLat([longitude, latitude])),\r\n//           });\r\n\r\n//           // Create a new style for the marker using IconStyle\r\n//           const iconStyle = new Style({\r\n//             image: new Icon({\r\n//               src: \"https://openlayers.org/en/latest/examples/data/icon.png\",\r\n//             }),\r\n//           });\r\n\r\n//           // Create a vector source and add the marker feature to it\r\n//           const vectorSource = new VectorSource({\r\n//             features: [marker],\r\n//           });\r\n//           marker.setStyle(iconStyle);\r\n\r\n//           // Add the vector layer to the map\r\n//           const vectorLayer = new VectorLayer({\r\n//             source: vectorSource,\r\n//           });\r\n//           map.addLayer(vectorLayer);\r\n\r\n//           // Set the view to your location\r\n//           map.getView().setCenter(fromLonLat([longitude, latitude]));\r\n//           map.getView().setZoom(15);\r\n//         },\r\n//         (error) => {\r\n//           console.error(error);\r\n//         }\r\n//       );\r\n//     }\r\n//   }, [map]);\r\n\r\n\r\n//   return <div id=\"map-container\" style={{ height: \"500px\" }}></div>;\r\n// };\r\n\r\n// export default MapWithLocation;\r\n\r\n// *********************************OPEN LAYERS CODE********************************************************\r\n\r\nimport React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\nimport axios from 'axios';\r\n\r\nclass MapWithLocation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lat: null,\r\n      lng: null,\r\n      locations:[],\r\n      hospitals: [],\r\n      garages: [],\r\n      query: '',\r\n      filteredLocations: [],\r\n      nearbyPlaces: [],\r\n    };\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    navigator.geolocation.watchPosition(\r\n      (position) => {\r\n        if(this._isMounted) {\r\n          this.setState({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          });\r\n          this.fetchNearbyPlaces(position.coords.latitude, position.coords.longitude);\r\n        }\r\n      },\r\n      () => {\r\n        console.log('Error getting current position');\r\n      }\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  fetchNearbyPlaces = (lat, lng) => {\r\n    axios.get(`http://localhost:5000/api/nearby?lat=${lat}&lng=${lng}`)\r\n      .then(response => {\r\n        if (this._isMounted){\r\n          this.setState({\r\n            nearbyPlaces: response.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleSearch(event) {\r\n    const query = event.target.value;\r\n    const { locations } = this.state;\r\n    const filteredLocations = locations.filter((location) =>\r\n      location.name.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    this.setState({\r\n      query: query,\r\n      filteredLocations: filteredLocations,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { google } = this.props;\r\n    const { lat, lng, filteredLocations, nearbyPlaces } = this.state;\r\n\r\n    if (!lat || !lng) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    const mapStyles = {\r\n      width: '50%',\r\n      height: '100%',\r\n      position: 'fixed',\r\n      right: 0,\r\n      top: 0,\r\n      margin: '0 20px 0 0', // added margin\r\n    };\r\n\r\n    const mapOptions = {\r\n      center: { lat, lng },\r\n      zoom: 16,\r\n    };\r\n\r\n    const searchStyles = {\r\n      width: '50%',\r\n      height: '100%',\r\n      padding: '10px',\r\n      boxSizing: 'border-box',\r\n      margin: '0 0 0 20px', // added margin\r\n    };\r\n\r\n    const nearbyPlacesStyles = {\r\n      width: '50%',\r\n      height: '100%',\r\n      padding: '10px',\r\n      boxSizing: 'border-box',\r\n      margin: '10px 0 0 20px', // added margin\r\n    };\r\n  \r\n    const containerStyles = {\r\n      display: 'flex',\r\n      height: '100vh',\r\n    };\r\n    \r\n    return (\r\n      <div style={containerStyles}>\r\n        <div style={searchStyles}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for a location\"\r\n            value={this.state.query}\r\n            onChange={this.handleSearch}\r\n            style={{ width: '100%', padding: '10px', marginBottom: '10px' }}\r\n            />\r\n          \r\n            {this.state.nearbyPlaces && (\r\n              <div>\r\n                <h2>Nearby Places</h2>\r\n                <ul>\r\n                  {this.state.nearbyPlaces.map(place => (\r\n                    <li key={place.id}>\r\n                      <strong>{place.name}</strong>\r\n                      <br />\r\n                      {place.vicinity}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>)\r\n\r\n          }\r\n}\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyC_9cAGZnlvSGLKRUMCxIgteTpaMvE83oY',\r\n})(MapWithLocation);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}