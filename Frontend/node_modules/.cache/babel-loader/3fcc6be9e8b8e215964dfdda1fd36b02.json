{"ast":null,"code":"/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nvar CanvasLineStringReplay = /*@__PURE__*/function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n  if (CanvasReplay) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create(CanvasReplay && CanvasReplay.prototype);\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString(lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString(multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish() {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke(state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n  return CanvasLineStringReplay;\n}(CanvasReplay);\nexport default CanvasLineStringReplay;","map":{"version":3,"names":["CanvasInstruction","strokeInstruction","beginPathInstruction","CanvasReplay","CanvasLineStringReplay","tolerance","maxExtent","resolution","pixelRatio","overlaps","declutterTree","call","drawFlatCoordinates_","flatCoordinates","offset","end","stride","myBegin","coordinates","length","myEnd","appendFlatCoordinates","moveToLineToInstruction","MOVE_TO_LINE_TO","instructions","push","hitDetectionInstructions","drawLineString","lineStringGeometry","feature","state","strokeStyle","lineWidth","undefined","updateStrokeStyle","applyStroke","beginGeometry","SET_STROKE_STYLE","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","getFlatCoordinates","getStride","endGeometry","drawMultiLineString","multiLineStringGeometry","ends","getEnds","i","ii","finish","lastStroke","reverseHitDetectionInstructions","prototype"],"sources":["../../../../src/ol/render/canvas/LineStringReplay.js"],"sourcesContent":["/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nclass CanvasLineStringReplay extends CanvasReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    const state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  }\n\n  /**\n   * @inheritDoc.\n   */\n  applyStroke(state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\n\nexport default CanvasLineStringReplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}