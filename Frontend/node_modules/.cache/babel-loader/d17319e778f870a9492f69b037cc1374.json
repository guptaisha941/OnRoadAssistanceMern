{"ast":null,"code":"/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/function (Disposable) {\n  function Target() {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n  }\n  if (Disposable) Target.__proto__ = Disposable;\n  Target.prototype = Object.create(Disposable && Disposable.prototype);\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener(type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent(event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal() {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners(type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener(opt_type) {\n    return opt_type ? opt_type in this.listeners_ : Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener(type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n  return Target;\n}(Disposable);\nexport default Target;","map":{"version":3,"names":["Disposable","unlistenAll","VOID","Event","Target","call","pendingRemovals_","dispatching_","listeners_","addEventListener","type","listener","listeners","indexOf","push","dispatchEvent","event","evt","target","propagate","i","ii","length","propagationStopped","pendingRemovals","removeEventListener","disposeInternal","getListeners","hasListener","opt_type","Object","keys","index","splice"],"sources":["../../../src/ol/events/Target.js"],"sourcesContent":["/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  addEventListener(type, listener) {\n    let listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    evt.target = this;\n    const listeners = this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        let pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlistenAll(this);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  getListeners(type) {\n    return this.listeners_[type];\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\n\nexport default Target;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}