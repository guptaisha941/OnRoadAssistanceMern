{"ast":null,"code":"/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return (/** @type {!WebGLRenderingContext} */context\n        );\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */document.createElement('canvas');\n    var gl = getContext(canvas, {\n      failIfMajorPerformanceCaveat: true\n    });\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\nexport { HAS, MAX_TEXTURE_SIZE, EXTENSIONS };","map":{"version":3,"names":["ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINK_STATUS","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","COMPILE_STATUS","FRAMEBUFFER","CONTEXT_IDS","getContext","canvas","opt_attributes","ii","length","i","context","e","DEBUG","MAX_TEXTURE_SIZE","EXTENSIONS","HAS","window","document","createElement","gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions"],"sources":["../../src/ol/webgl.js"],"sourcesContent":["/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport const DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nlet EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nlet HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n"],"mappings":"AAAA;;;;;;;;;;;;AAcA,OAAO,IAAMA,GAAG,GAAG,CAAC;;;;;;AAOpB,OAAO,IAAMC,SAAS,GAAG,MAAM;;;;;;AAO/B,OAAO,IAAMC,iBAAiB,GAAG,MAAM;;;;;;AAOvC,OAAO,IAAMC,gBAAgB,GAAG,UAAU;;;;;;AAO1C,OAAO,IAAMC,SAAS,GAAG,MAAM;;;;;;AAO/B,OAAO,IAAMC,cAAc,GAAG,MAAM;;;;;;AAOpC,OAAO,IAAMC,mBAAmB,GAAG,MAAM;;;;;;AAOzC,OAAO,IAAMC,YAAY,GAAG,MAAM;;;;;;AAOlC,OAAO,IAAMC,oBAAoB,GAAG,MAAM;;;;;;AAO1C,OAAO,IAAMC,WAAW,GAAG,MAAM;;;;;;AAOjC,OAAO,IAAMC,WAAW,GAAG,MAAM;;;;;;AAOjC,OAAO,IAAMC,YAAY,GAAG,MAAM;;;;;;AAOlC,OAAO,IAAMC,SAAS,GAAG,MAAM;;;;;;AAO/B,OAAO,IAAMC,KAAK,GAAG,MAAM;;;;;;AAO3B,OAAO,IAAMC,YAAY,GAAG,MAAM;;;;;;AAOlC,OAAO,IAAMC,UAAU,GAAG,MAAM;;;;;;AAOhC,OAAO,IAAMC,YAAY,GAAG,MAAM;;;;;;AAOlC,OAAO,IAAMC,aAAa,GAAG,MAAM;;;;;;AAOnC,OAAO,IAAMC,cAAc,GAAG,MAAM;;;;;;AAOpC,OAAO,IAAMC,YAAY,GAAG,MAAM;;;;;;AAOlC,OAAO,IAAMC,KAAK,GAAG,MAAM;;;;;;AAO3B,OAAO,IAAMC,IAAI,GAAG,MAAM;;;;;;AAO1B,OAAO,IAAMC,eAAe,GAAG,MAAM;;;;;;AAOrC,OAAO,IAAMC,aAAa,GAAG,MAAM;;;;;;AAOnC,OAAO,IAAMC,WAAW,GAAG,MAAM;;;;;;AAOjC,OAAO,IAAMC,MAAM,GAAG,MAAM;;;;;;AAO5B,OAAO,IAAMC,kBAAkB,GAAG,MAAM;;;;;;AAOxC,OAAO,IAAMC,kBAAkB,GAAG,MAAM;;;;;;AAOxC,OAAO,IAAMC,cAAc,GAAG,MAAM;;;;;;AAOpC,OAAO,IAAMC,cAAc,GAAG,MAAM;;;;;;AAOpC,OAAO,IAAMC,UAAU,GAAG,MAAM;;;;;;AAOhC,OAAO,IAAMC,QAAQ,GAAG,MAAM;;;;;;AAO9B,OAAO,IAAMC,aAAa,GAAG,MAAM;;;;;;AAOnC,OAAO,IAAMC,cAAc,GAAG,MAAM;;;;;;AAOpC,OAAO,IAAMC,WAAW,GAAG,MAAM;;;;;;;;;AAWjC,IAAMC,WAAW,GAAG,CAClB,oBAAoB,EACpB,OAAO,EACP,WAAW,EACX,WAAW,CACZ;;;;;;;AAQD,OAAO,SAASC,UAAUA,CAACC,MAAM,EAAEC,cAAc,EAAE;EACjD,IAAMC,EAAE,GAAGJ,WAAW,CAACK,MAAM;EAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,EAAE,EAAE,EAAEE,CAAC,EAAE;IAC3B,IAAI;MACF,IAAMC,OAAO,GAAGL,MAAM,CAACD,UAAU,CAACD,WAAW,CAACM,CAAC,CAAC,EAAEH,cAAc,CAAC;MACjE,IAAII,OAAO,EAAE;QACX,6CAA8CA;QAAO;;KAExD,CAAC,OAAOC,CAAC,EAAE;;;;EAId,OAAO,IAAI;;;;;;;;AASb,OAAO,IAAMC,KAAK,GAAG,IAAI;;;;;;;AAQzB,IAAIC,gBAAgB,CAAC;;;;;;AAOrB,IAAIC,UAAU,CAAC;;;;;;;AAQf,IAAIC,GAAG,GAAG,KAAK;;;AAGf,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAI,uBAAuB,IAAIA,MAAM,EAAE;EACtE,IAAI;IACF,IAAMX,MAAM,mCAAqCY,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAE;IAClF,IAAMC,EAAE,GAAGf,UAAU,CAACC,MAAM,EAAE;MAACe,4BAA4B,EAAE;IAAI,CAAC,CAAC;IACnE,IAAID,EAAE,EAAE;MACNJ,GAAG,GAAG,IAAI;MACVF,gBAAgB,wBAA0BM,EAAE,CAACE,YAAY,CAACF,EAAE,CAACN,gBAAgB,CAAE;MAC/EC,UAAU,GAAGK,EAAE,CAACG,sBAAsB,EAAE;;GAE3C,CAAC,OAAOX,CAAC,EAAE;;;;AAKd,SAAQI,GAAG,EAAEF,gBAAgB,EAAEC,UAAU"},"metadata":{},"sourceType":"module"}