{"ast":null,"code":"/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray } from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n  }\n  if (Disposable) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create(Disposable && Disposable.prototype);\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent(type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers(constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D(frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n    composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n    invertTransform(transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers() {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n    var projection = viewState.projection;\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */layer.getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer(layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey(layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers() {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap() {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_() {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_(layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_(map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame(frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache(frameState) {\n    frameState.postRenderFunctions.push( /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */expireIconCache);\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers(frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push( /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */this.removeUnusedLayerRenderers_.bind(this));\n        return;\n      }\n    }\n  };\n  return MapRenderer;\n}(Disposable);\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;","map":{"version":3,"names":["abstract","getUid","Disposable","listen","unlistenByKey","EventType","getWidth","TRUE","visibleAtResolution","shared","iconImageCache","compose","composeTransform","invert","invertTransform","setFromArray","transformSetFromArray","MapRenderer","map","call","map_","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","dispatchRenderEvent","type","frameState","registerLayerRenderers","constructors","push","apply","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","size","resolution","rotation","center","removeLayerRenderers","key","removeLayerRendererByKey_","dispose","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","thisArg","layerFilter","thisArg2","result","viewResolution","feature","layer","managed","layerStates","skippedFeatureUids","projection","translatedCoordinate","canWrapX","projectionExtent","getExtent","worldWidth","x","worldsAway","Math","ceil","layerStatesArray","numLayers","length","i","layerState","layerRenderer","getLayerRenderer","source","getSource","getWrapX","undefined","forEachLayerAtPixel","pixel","hasFeatureAtCoordinate","hasFeature","layerKey","renderer","ii","candidate","CHANGE","handleLayerRendererChange_","Error","getType","getLayerRendererByKey","getLayerRenderers","getMap","render","removeUnusedLayerRenderers_","renderFrame","scheduleExpireIconCache","postRenderFunctions","expireIconCache","scheduleRemoveUnusedLayerRenderers","bind","expire","sortByZIndex","state1","state2","zIndex"],"sources":["../../../src/ol/renderer/Map.js"],"sourcesContent":["/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  registerLayerRenderers(constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  }\n\n  /**\n   * Removes all layer renderers.\n   */\n  removeLayerRenderers() {\n    for (const key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      const managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    const projection = viewState.projection;\n\n    let translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      const x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        const layerRenderer = this.getLayerRenderer(layer);\n        const source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  getLayerRenderer(layer) {\n    const layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      let renderer;\n      for (let i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        const candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  }\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  getLayerRendererByKey(layerKey) {\n    return this.layerRenderers_[layerKey];\n  }\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  getLayerRenderers() {\n    return this.layerRenderers_;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  handleLayerRendererChange_() {\n    this.map_.render();\n  }\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  removeLayerRendererByKey_(layerKey) {\n    const layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  removeUnusedLayerRenderers_(map, frameState) {\n    for (const layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  }\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleRemoveUnusedLayerRenderers(frameState) {\n    for (const layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n"],"mappings":"AAAA;;;AAGA,SAAQA,QAAQ,EAAEC,MAAM,QAAO,YAAY;AAC3C,OAAOC,UAAU,MAAM,kBAAkB;AACzC,SAAQC,MAAM,EAAEC,aAAa,QAAO,cAAc;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAAQC,QAAQ,QAAO,cAAc;AACrC,SAAQC,IAAI,QAAO,iBAAiB;AACpC,SAAQC,mBAAmB,QAAO,mBAAmB;AACrD,SAAQC,MAAM,IAAIC,cAAc,QAAO,4BAA4B;AACnE,SAAQC,OAAO,IAAIC,gBAAgB,EAAEC,MAAM,IAAIC,eAAe,EAAEC,YAAY,IAAIC,qBAAqB,QAAO,iBAAiB;;;;;AAK7H,IAAMC,WAAW,GAAmB,uBAAAf,UAAA;EAKlC,SAAAe,WAAWA,CAACC,GAAG,EAAE;IACfhB,UAAA,CAAAiB,IAAK,KAAC,CAAC;;;;;;IAMP,IAAI,CAACC,IAAI,GAAGF,GAAG;;;;;;IAMf,IAAI,CAACG,eAAe,GAAG,EAAE;;;;;;IAMzB,IAAI,CAACC,uBAAuB,GAAG,EAAE;;;;;;IAMjC,IAAI,CAACC,0BAA0B,GAAG,EAAE;;;;;;;;;;;wBAStCC,mBAAA,YAAAA,oBAAoBC,IAAI,EAAEC,UAAU,EAAE;IACpC1B,QAAQ,EAAE;;;;;;;wBAOZ2B,sBAAA,YAAAA,uBAAuBC,YAAY,EAAE;IACnC,IAAI,CAACL,0BAA0B,CAACM,IAAI,CAACC,KAAK,CAAC,IAAI,CAACP,0BAA0B,EAAEK,YAAY,CAAC;;;;;;;wBAO3FG,mBAAA,YAAAA,oBAAoBL,UAAU,EAAE;IAC9B,IAAMM,SAAS,GAAGN,UAAU,CAACM,SAAS;IACtC,IAAMC,0BAA0B,GAAGP,UAAU,CAACO,0BAA0B;IACxE,IAAMC,0BAA0B,GAAGR,UAAU,CAACQ,0BAA0B;IAExEtB,gBAAgB,CAACqB,0BAA0B,EACzCP,UAAU,CAACS,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAET,UAAU,CAACS,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAC9C,CAAC,GAAGH,SAAS,CAACI,UAAU,EAAE,CAAC,CAAC,GAAGJ,SAAS,CAACI,UAAU,EACnD,CAACJ,SAAS,CAACK,QAAQ,EACnB,CAACL,SAAS,CAACM,MAAM,CAAC,CAAC,CAAC,EAAE,CAACN,SAAS,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC;IAE7CxB,eAAe,CACbE,qBAAqB,CAACkB,0BAA0B,EAAED,0BAA0B,CAAC,CAAC;;;;;;wBAMlFM,oBAAA,YAAAA,qBAAA,EAAuB;IACrB,KAAK,IAAMC,GAAG,IAAI,IAAI,CAACnB,eAAe,EAAE;MACtC,IAAI,CAACoB,yBAAyB,CAACD,GAAG,CAAC,CAACE,OAAO,EAAE;;;;;;;;;;;;;;;;;;;wBAmBjDC,0BAAA,YAAAA,2BACEC,UAAU,EACVlB,UAAU,EACVmB,YAAY,EACZC,QAAQ,EACRC,OAAO,EACPC,WAAW,EACXC,QAAQ,EACR;IACA,IAAIC,MAAM;IACV,IAAMlB,SAAS,GAAGN,UAAU,CAACM,SAAS;IACtC,IAAMmB,cAAc,GAAGnB,SAAS,CAACI,UAAU;;;;;;;IAO3C,SAASO,0BAA0BA,CAACS,OAAO,EAAEC,KAAK,EAAE;MAClD,IAAMC,OAAO,GAAG5B,UAAU,CAAC6B,WAAW,CAACtD,MAAM,CAACoD,KAAK,CAAC,CAAC,CAACC,OAAO;MAC7D,IAAI,EAAErD,MAAM,CAACmD,OAAO,CAAC,IAAI1B,UAAU,CAAC8B,kBAAkB,IAAI,CAACF,OAAO,CAAC,EAAE;QACnE,OAAOR,QAAQ,CAAC3B,IAAI,CAAC4B,OAAO,EAAEK,OAAO,EAAEE,OAAO,GAAGD,KAAK,GAAG,IAAI,CAAC;;;IAIlE,IAAMI,UAAU,GAAGzB,SAAS,CAACyB,UAAU;IAEvC,IAAIC,oBAAoB,GAAGd,UAAU;IACrC,IAAIa,UAAU,CAACE,QAAQ,EAAE,EAAE;MACzB,IAAMC,gBAAgB,GAAGH,UAAU,CAACI,SAAS,EAAE;MAC/C,IAAMC,UAAU,GAAGxD,QAAQ,CAACsD,gBAAgB,CAAC;MAC7C,IAAMG,CAAC,GAAGnB,UAAU,CAAC,CAAC,CAAC;MACvB,IAAImB,CAAC,GAAGH,gBAAgB,CAAC,CAAC,CAAC,IAAIG,CAAC,GAAGH,gBAAgB,CAAC,CAAC,CAAC,EAAE;QACtD,IAAMI,UAAU,GAAGC,IAAI,CAACC,IAAI,CAAC,CAACN,gBAAgB,CAAC,CAAC,CAAC,GAAGG,CAAC,IAAID,UAAU,CAAC;QACpEJ,oBAAoB,GAAG,CAACK,CAAC,GAAGD,UAAU,GAAGE,UAAU,EAAEpB,UAAU,CAAC,CAAC,CAAC,CAAC;;;IAIvE,IAAMW,WAAW,GAAG7B,UAAU,CAACyC,gBAAgB;IAC/C,IAAMC,SAAS,GAAGb,WAAW,CAACc,MAAM;IACpC,IAAIC,CAAC;IACL,KAAKA,CAAC,GAAGF,SAAS,GAAG,CAAC,EAAEE,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MACnC,IAAMC,UAAU,GAAGhB,WAAW,CAACe,CAAC,CAAC;MACjC,IAAMjB,KAAK,GAAGkB,UAAU,CAAClB,KAAK;MAC9B,IAAI7C,mBAAmB,CAAC+D,UAAU,EAAEpB,cAAc,CAAC,IAAIH,WAAW,CAAC7B,IAAI,CAAC8B,QAAQ,EAAEI,KAAK,CAAC,EAAE;QACxF,IAAMmB,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACpB,KAAK,CAAC;QAClD,IAAMqB,MAAM,qDAAuDrB,KAAK,CAAEsB,SAAS,EAAE;QACrF,IAAID,MAAM,EAAE;UACVxB,MAAM,GAAGsB,aAAa,CAAC7B,0BAA0B,CAC/C+B,MAAM,CAACE,QAAQ,EAAE,GAAGlB,oBAAoB,GAAGd,UAAU,EACrDlB,UAAU,EAAEmB,YAAY,EAAEF,0BAA0B,CAAC;;QAEzD,IAAIO,MAAM,EAAE;UACV,OAAOA,MAAM;;;;IAInB,OAAO2B,SAAS;;;;;;;;;;;;;;;;;;;wBAmBlBC,mBAAA,YAAAA,oBAAoBC,KAAK,EAAErD,UAAU,EAAEmB,YAAY,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,QAAQ,EAAE;IAC7F,OAAOjD,QAAQ,EAAE;;;;;;;;;;;;;;;wBAenBgF,sBAAA,YAAAA,uBAAuBpC,UAAU,EAAElB,UAAU,EAAEmB,YAAY,EAAEG,WAAW,EAAED,OAAO,EAAE;IACjF,IAAMkC,UAAU,GAAG,IAAI,CAACtC,0BAA0B,CAChDC,UAAU,EAAElB,UAAU,EAAEmB,YAAY,EAAEtC,IAAI,EAAE,IAAI,EAAEyC,WAAW,EAAED,OAAO,CAAC;IAEzE,OAAOkC,UAAU,KAAKJ,SAAS;;;;;;;;wBAQjCJ,gBAAA,YAAAA,iBAAiBpB,KAAK,EAAE;IACtB,IAAM6B,QAAQ,GAAGjF,MAAM,CAACoD,KAAK,CAAC;IAC9B,IAAI6B,QAAQ,IAAI,IAAI,CAAC7D,eAAe,EAAE;MACpC,OAAO,IAAI,CAACA,eAAe,CAAC6D,QAAQ,CAAC;KACtC,MAAM;MACL,IAAIC,QAAQ;MACZ,KAAK,IAAIb,CAAC,GAAG,CAAC,EAAEc,EAAE,GAAG,IAAI,CAAC7D,0BAA0B,CAAC8C,MAAM,EAAEC,CAAC,GAAGc,EAAE,EAAE,EAAEd,CAAC,EAAE;QACxE,IAAMe,SAAS,GAAG,IAAI,CAAC9D,0BAA0B,CAAC+C,CAAC,CAAC;QACpD,IAAIe,SAAS,CAAC,SAAS,CAAC,CAAChC,KAAK,CAAC,EAAE;UAC/B8B,QAAQ,GAAGE,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAEhC,KAAK,CAAC;UAC3C;;;MAGJ,IAAI8B,QAAQ,EAAE;QACZ,IAAI,CAAC9D,eAAe,CAAC6D,QAAQ,CAAC,GAAGC,QAAQ;QACzC,IAAI,CAAC7D,uBAAuB,CAAC4D,QAAQ,CAAC,GAAG/E,MAAM,CAACgF,QAAQ,EACtD9E,SAAS,CAACiF,MAAM,EAAE,IAAI,CAACC,0BAA0B,EAAE,IAAI,CAAC;OAC3D,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,uCAAuC,GAAGnC,KAAK,CAACoC,OAAO,EAAE,CAAC;;MAE5E,OAAON,QAAQ;;;;;;;;;wBASnBO,qBAAA,YAAAA,sBAAsBR,QAAQ,EAAE;IAC9B,OAAO,IAAI,CAAC7D,eAAe,CAAC6D,QAAQ,CAAC;;;;;;;wBAOvCS,iBAAA,YAAAA,kBAAA,EAAoB;IAClB,OAAO,IAAI,CAACtE,eAAe;;;;;;wBAM7BuE,MAAA,YAAAA,OAAA,EAAS;IACP,OAAO,IAAI,CAACxE,IAAI;;;;;;;wBAOlBmE,0BAAA,YAAAA,2BAAA,EAA6B;IAC3B,IAAI,CAACnE,IAAI,CAACyE,MAAM,EAAE;;;;;;;;wBAQpBpD,yBAAA,YAAAA,0BAA0ByC,QAAQ,EAAE;IAClC,IAAMV,aAAa,GAAG,IAAI,CAACnD,eAAe,CAAC6D,QAAQ,CAAC;IACpD,OAAO,IAAI,CAAC7D,eAAe,CAAC6D,QAAQ,CAAC;IAErC9E,aAAa,CAAC,IAAI,CAACkB,uBAAuB,CAAC4D,QAAQ,CAAC,CAAC;IACrD,OAAO,IAAI,CAAC5D,uBAAuB,CAAC4D,QAAQ,CAAC;IAE7C,OAAOV,aAAa;;;;;;;;wBAQtBsB,2BAAA,YAAAA,4BAA4B5E,GAAG,EAAEQ,UAAU,EAAE;IAC3C,KAAK,IAAMwD,QAAQ,IAAI,IAAI,CAAC7D,eAAe,EAAE;MAC3C,IAAI,CAACK,UAAU,IAAI,EAAEwD,QAAQ,IAAIxD,UAAU,CAAC6B,WAAW,CAAC,EAAE;QACxD,IAAI,CAACd,yBAAyB,CAACyC,QAAQ,CAAC,CAACxC,OAAO,EAAE;;;;;;;;;;wBAUxDqD,WAAA,YAAAA,YAAYrE,UAAU,EAAE;IACtB1B,QAAQ,EAAE;;;;;;;wBAOZgG,uBAAA,YAAAA,wBAAwBtE,UAAU,EAAE;IAClCA,UAAU,CAACuE,mBAAmB,CAACpE,IAAI,gEAAiEqE,eAAe,CAAE;;;;;;;wBAOvHC,kCAAA,YAAAA,mCAAmCzE,UAAU,EAAE;IAC7C,KAAK,IAAMwD,QAAQ,IAAI,IAAI,CAAC7D,eAAe,EAAE;MAC3C,IAAI,EAAE6D,QAAQ,IAAIxD,UAAU,CAAC6B,WAAW,CAAC,EAAE;QACzC7B,UAAU,CAACuE,mBAAmB,CAACpE,IAAI,E,8DAC+B,IAAI,CAACiE,2BAA2B,CAACM,IAAI,CAAC,IAAI,CAAC,CAC5G;QACD;;;GAGL;;EAxTuBlG,UAAA;;;;;;AAgU1B,SAASgG,eAAeA,CAAChF,GAAG,EAAEQ,UAAU,EAAE;EACxChB,cAAc,CAAC2F,MAAM,EAAE;;;;;;;;AASzB,OAAO,SAASC,YAAYA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAC3C,OAAOD,MAAM,CAACE,MAAM,GAAGD,MAAM,CAACC,MAAM;;AAEtC,eAAexF,WAAW"},"metadata":{},"sourceType":"module"}