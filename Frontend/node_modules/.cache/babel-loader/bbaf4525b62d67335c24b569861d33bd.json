{"ast":null,"code":"/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n  var options = opt_options ? opt_options : {};\n  var controls = new Collection();\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n  var attributionControl = options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n  return controls;\n}","map":{"version":3,"names":["Collection","Attribution","Rotate","Zoom","defaults","opt_options","options","controls","zoomControl","zoom","undefined","push","zoomOptions","rotateControl","rotate","rotateOptions","attributionControl","attribution","attributionOptions"],"sources":["../../../src/ol/control/util.js"],"sourcesContent":["/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n"],"mappings":"AAAA;;;AAGA,OAAOA,UAAU,MAAM,kBAAkB;AACzC,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,IAAI,MAAM,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmC5B,OAAO,SAASC,QAAQA,CAACC,WAAW,EAAE;EAEpC,IAAMC,OAAO,GAAGD,WAAW,GAAGA,WAAW,GAAG,EAAE;EAE9C,IAAME,QAAQ,GAAG,IAAIP,UAAU,EAAE;EAEjC,IAAMQ,WAAW,GAAGF,OAAO,CAACG,IAAI,KAAKC,SAAS,GAAGJ,OAAO,CAACG,IAAI,GAAG,IAAI;EACpE,IAAID,WAAW,EAAE;IACfD,QAAQ,CAACI,IAAI,CAAC,IAAIR,IAAI,CAACG,OAAO,CAACM,WAAW,CAAC,CAAC;;EAG9C,IAAMC,aAAa,GAAGP,OAAO,CAACQ,MAAM,KAAKJ,SAAS,GAAGJ,OAAO,CAACQ,MAAM,GAAG,IAAI;EAC1E,IAAID,aAAa,EAAE;IACjBN,QAAQ,CAACI,IAAI,CAAC,IAAIT,MAAM,CAACI,OAAO,CAACS,aAAa,CAAC,CAAC;;EAGlD,IAAMC,kBAAkB,GAAGV,OAAO,CAACW,WAAW,KAAKP,SAAS,GAC1DJ,OAAO,CAACW,WAAW,GAAG,IAAI;EAC5B,IAAID,kBAAkB,EAAE;IACtBT,QAAQ,CAACI,IAAI,CAAC,IAAIV,WAAW,CAACK,OAAO,CAACY,kBAAkB,CAAC,CAAC;;EAG5D,OAAOX,QAAQ"},"metadata":{},"sourceType":"module"}