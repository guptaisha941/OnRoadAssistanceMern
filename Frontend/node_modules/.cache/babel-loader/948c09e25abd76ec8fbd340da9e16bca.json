{"ast":null,"code":"/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { CANVAS_LINE_DASH } from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n  if (VectorContext) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create(VectorContext && VectorContext.prototype);\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_(flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry(geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint( /** @type {import(\"../../geom/Point.js\").default} */geometry);\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString( /** @type {import(\"../../geom/LineString.js\").default} */geometry);\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon( /** @type {import(\"../../geom/Polygon.js\").default} */geometry);\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint( /** @type {import(\"../../geom/MultiPoint.js\").default} */geometry);\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString( /** @type {import(\"../../geom/MultiLineString.js\").default} */geometry);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon( /** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry);\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection( /** @type {import(\"../../geom/GeometryCollection.js\").default} */geometry);\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle( /** @type {import(\"../../geom/Circle.js\").default} */geometry);\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature(feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection(geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint(geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint(geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString(geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */geometry.getEnds();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_(fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_(strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */strokeState.lineCap;\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */strokeState.lineCap;\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_(textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ? textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */textAlign;\n      context.textBaseline = /** @type {CanvasTextBaseline} */textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline = /** @type {CanvasTextBaseline} */textState.textBaseline;\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ? strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ? textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ? textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ? textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ? textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ? textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ? textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ? textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ = textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ = textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ? textScale : 1);\n    }\n  };\n  return CanvasImmediateRenderer;\n}(VectorContext);\nexport default CanvasImmediateRenderer;","map":{"version":3,"names":["equals","asColorLike","intersects","GeometryType","transformGeom2D","transform2D","CANVAS_LINE_DASH","VectorContext","defaultTextAlign","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultLineWidth","defaultMiterLimit","defaultStrokeStyle","defaultTextBaseline","defaultFont","create","createTransform","compose","composeTransform","CanvasImmediateRenderer","context","pixelRatio","extent","transform","viewRotation","call","context_","pixelRatio_","extent_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","flatCoordinates","offset","end","stride","pixelCoordinates","localTransform","alpha","globalAlpha","rotation","i","ii","length","x","y","centerX","centerY","setTransform","apply","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","ends","drawCircle","geometry","getExtent","dx","dy","radius","Math","sqrt","beginPath","arc","PI","fill","stroke","getCenter","setStyle","style","setFillStrokeStyle","getFill","getStroke","setImageStyle","getImage","setTextStyle","getText","drawGeometry","type","getType","POINT","drawPoint","LINE_STRING","drawLineString","POLYGON","drawPolygon","MULTI_POINT","drawMultiPoint","MULTI_LINE_STRING","drawMultiLineString","MULTI_POLYGON","drawMultiPolygon","GEOMETRY_COLLECTION","drawGeometryCollection","CIRCLE","drawFeature","feature","getGeometryFunction","geometries","getGeometriesArray","getFlatCoordinates","getStride","flatMidpoint","getFlatMidpoint","geometryExtent","getEnds","flatMidpoints","getFlatMidpoints","getOrientedFlatCoordinates","flatInteriorPoint","getFlatInteriorPoint","endss","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","fillStyle","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","strokeStyle","textState","contextTextState","textAlign","font","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","undefined","imageStyle","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getSize","getOpacity","getRotateWithView","getRotation","getScale","textStyle","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline"],"sources":["../../../../src/ol/render/canvas/Immediate.js"],"sourcesContent":["/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   */\n  constructor(context, pixelRatio, extent, transform, viewRotation) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        const localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      const imageImage = imageStyle.getImage(1);\n      const imageOrigin = imageStyle.getOrigin();\n      const imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScale();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  }\n}\n\n\nexport default CanvasImmediateRenderer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}