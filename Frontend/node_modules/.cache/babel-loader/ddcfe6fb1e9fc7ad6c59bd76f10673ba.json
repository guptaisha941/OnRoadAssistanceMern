{"ast":null,"code":"/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport { create as createTransform } from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = function () {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n  return function (fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n}();\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = function () {\n  var span;\n  var heights = textHeights;\n  return function (font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n}();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\nexport var resetTransform = createTransform();\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}","map":{"version":3,"names":["getFontFamilies","createCanvasContext2D","clear","LRUCache","create","createTransform","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts","measureContext","textHeights","checkFont","retries","checked","size","referenceFonts","len","length","text","interval","referenceWidth","isAvailable","font","context","getMeasureContext","weight","fontWeight","available","i","referenceFont","measureText","width","check","done","clearInterval","undefined","fontSpec","fontFamilies","ii","fontFamily","setInterval","measureTextHeight","span","heights","height","document","createElement","textContent","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","measureTextWidth","rotateAtOffset","rotation","offsetX","offsetY","translate","rotate","resetTransform","drawImage","transform","opacity","image","originX","originY","w","h","x","y","scale","alpha","globalAlpha","setTransform","apply"],"sources":["../../../src/ol/render/canvas.js"],"sourcesContent":["/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (let weight = 100; weight <= 700; weight += 300) {\n      const fontWeight = weight + ' ';\n      let available = true;\n      for (let i = 0; i < len; ++i) {\n        const referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          const width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n"],"mappings":"AAAA;;;AAGA,SAAQA,eAAe,QAAO,WAAW;AACzC,SAAQC,qBAAqB,QAAO,WAAW;AAC/C,SAAQC,KAAK,QAAO,WAAW;AAC/B,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAAQC,MAAM,IAAIC,eAAe,QAAO,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EzD,OAAO,IAAMC,WAAW,GAAG,iBAAiB;;;;;;AAO5C,OAAO,IAAMC,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;;;;;AAO5C,OAAO,IAAMC,cAAc,GAAG,OAAO;;;;;;AAOrC,OAAO,IAAMC,eAAe,GAAG,EAAE;;;;;;AAOjC,OAAO,IAAMC,qBAAqB,GAAG,CAAC;;;;;;AAOtC,OAAO,IAAMC,eAAe,GAAG,OAAO;;;;;;AAOtC,OAAO,IAAMC,iBAAiB,GAAG,EAAE;;;;;;AAOnC,OAAO,IAAMC,kBAAkB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;;;;;AAO9C,OAAO,IAAMC,gBAAgB,GAAG,QAAQ;;;;;;AAOxC,OAAO,IAAMC,mBAAmB,GAAG,QAAQ;;;;;;AAO3C,OAAO,IAAMC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;;;;;AAO1C,OAAO,IAAMC,gBAAgB,GAAG,CAAC;;;;;;;;AASjC,OAAO,IAAMC,UAAU,GAAG,IAAIf,QAAQ,EAAE;;;;;AAMxC,OAAO,IAAMgB,YAAY,GAAG,EAAE;;;;;AAM9B,IAAIC,cAAc,GAAG,IAAI;;;;;AAMzB,OAAO,IAAMC,WAAW,GAAG,EAAE;;;;;;AAO7B,OAAO,IAAMC,SAAS,GAAI,YAAW;EACnC,IAAMC,OAAO,GAAG,EAAE;EAClB,IAAMC,OAAO,GAAGL,YAAY;EAC5B,IAAMM,IAAI,GAAG,OAAO;EACpB,IAAMC,cAAc,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;EAC7C,IAAMC,GAAG,GAAGD,cAAc,CAACE,MAAM;EACjC,IAAMC,IAAI,GAAG,+BAA+B;EAC5C,IAAIC,QAAQ,EAAEC,cAAc;EAE5B,SAASC,WAAWA,CAACC,IAAI,EAAE;IACzB,IAAMC,OAAO,GAAGC,iBAAiB,EAAE;;;IAGnC,KAAK,IAAIC,MAAM,GAAG,GAAG,EAAEA,MAAM,IAAI,GAAG,EAAEA,MAAM,IAAI,GAAG,EAAE;MACnD,IAAMC,UAAU,GAAGD,MAAM,GAAG,GAAG;MAC/B,IAAIE,SAAS,GAAG,IAAI;MACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,GAAG,EAAE,EAAEY,CAAC,EAAE;QAC5B,IAAMC,aAAa,GAAGd,cAAc,CAACa,CAAC,CAAC;QACvCL,OAAO,CAACD,IAAI,GAAGI,UAAU,GAAGZ,IAAI,GAAGe,aAAa;QAChDT,cAAc,GAAGG,OAAO,CAACO,WAAW,CAACZ,IAAI,CAAC,CAACa,KAAK;QAChD,IAAIT,IAAI,IAAIO,aAAa,EAAE;UACzBN,OAAO,CAACD,IAAI,GAAGI,UAAU,GAAGZ,IAAI,GAAGQ,IAAI,GAAG,GAAG,GAAGO,aAAa;UAC7D,IAAME,KAAK,GAAGR,OAAO,CAACO,WAAW,CAACZ,IAAI,CAAC,CAACa,KAAK;;;UAG7CJ,SAAS,GAAGA,SAAS,IAAII,KAAK,IAAIX,cAAc;;;MAGpD,IAAIO,SAAS,EAAE;;;;QAIb,OAAO,IAAI;;;IAGf,OAAO,KAAK;;EAGd,SAASK,KAAKA,CAAA,EAAG;IACf,IAAIC,IAAI,GAAG,IAAI;IACf,KAAK,IAAMX,IAAI,IAAIT,OAAO,EAAE;MAC1B,IAAIA,OAAO,CAACS,IAAI,CAAC,GAAGV,OAAO,EAAE;QAC3B,IAAIS,WAAW,CAACC,IAAI,CAAC,EAAE;UACrBT,OAAO,CAACS,IAAI,CAAC,GAAGV,OAAO;UACvBrB,KAAK,CAACmB,WAAW,CAAC;;UAElBD,cAAc,GAAG,IAAI;UACrBF,UAAU,CAAChB,KAAK,EAAE;SACnB,MAAM;UACL,EAAEsB,OAAO,CAACS,IAAI,CAAC;UACfW,IAAI,GAAG,KAAK;;;;IAIlB,IAAIA,IAAI,EAAE;MACRC,aAAa,CAACf,QAAQ,CAAC;MACvBA,QAAQ,GAAGgB,SAAS;;;EAIxB,OAAO,UAASC,QAAQ,EAAE;IACxB,IAAMC,YAAY,GAAGhD,eAAe,CAAC+C,QAAQ,CAAC;IAC9C,IAAI,CAACC,YAAY,EAAE;MACjB;;IAEF,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEU,EAAE,GAAGD,YAAY,CAACpB,MAAM,EAAEW,CAAC,GAAGU,EAAE,EAAE,EAAEV,CAAC,EAAE;MACrD,IAAMW,UAAU,GAAGF,YAAY,CAACT,CAAC,CAAC;MAClC,IAAI,EAAEW,UAAU,IAAI1B,OAAO,CAAC,EAAE;QAC5BA,OAAO,CAAC0B,UAAU,CAAC,GAAG3B,OAAO;QAC7B,IAAI,CAACS,WAAW,CAACkB,UAAU,CAAC,EAAE;UAC5B1B,OAAO,CAAC0B,UAAU,CAAC,GAAG,CAAC;UACvB,IAAIpB,QAAQ,KAAKgB,SAAS,EAAE;YAC1BhB,QAAQ,GAAGqB,WAAW,CAACR,KAAK,EAAE,EAAE,CAAC;;;;;GAK1C;CACF,EAAG;;;;;AAMJ,SAASR,iBAAiBA,CAAA,EAAG;EAC3B,IAAI,CAACf,cAAc,EAAE;IACnBA,cAAc,GAAGnB,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC;;EAE9C,OAAOmB,cAAc;;;;;;;AAQvB,OAAO,IAAMgC,iBAAiB,GAAI,YAAW;EAC3C,IAAIC,IAAI;EACR,IAAMC,OAAO,GAAGjC,WAAW;EAC3B,OAAO,UAASY,IAAI,EAAE;IACpB,IAAIsB,MAAM,GAAGD,OAAO,CAACrB,IAAI,CAAC;IAC1B,IAAIsB,MAAM,IAAIT,SAAS,EAAE;MACvB,IAAI,CAACO,IAAI,EAAE;QACTA,IAAI,GAAGG,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;QACrCJ,IAAI,CAACK,WAAW,GAAG,GAAG;QACtBL,IAAI,CAACM,KAAK,CAACC,MAAM,GAAGP,IAAI,CAACM,KAAK,CAACE,OAAO,GAAG,cAAc;QACvDR,IAAI,CAACM,KAAK,CAACG,QAAQ,GAAG,qBAAqB;QAC3CT,IAAI,CAACM,KAAK,CAACI,IAAI,GAAG,qBAAqB;;MAEzCV,IAAI,CAACM,KAAK,CAAC1B,IAAI,GAAGA,IAAI;MACtBuB,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACZ,IAAI,CAAC;MAC/BE,MAAM,GAAGD,OAAO,CAACrB,IAAI,CAAC,GAAGoB,IAAI,CAACa,YAAY;MAC1CV,QAAQ,CAACQ,IAAI,CAACG,WAAW,CAACd,IAAI,CAAC;;IAEjC,OAAOE,MAAM;GACd;CACF,EAAG;;;;;;;AAQJ,OAAO,SAASa,gBAAgBA,CAACnC,IAAI,EAAEJ,IAAI,EAAE;EAC3C,IAAMT,cAAc,GAAGe,iBAAiB,EAAE;EAC1C,IAAIF,IAAI,IAAIb,cAAc,CAACa,IAAI,EAAE;IAC/Bb,cAAc,CAACa,IAAI,GAAGA,IAAI;;EAE5B,OAAOb,cAAc,CAACqB,WAAW,CAACZ,IAAI,CAAC,CAACa,KAAK;;;;;;;;;AAU/C,OAAO,SAAS2B,cAAcA,CAACnC,OAAO,EAAEoC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAClE,IAAIF,QAAQ,KAAK,CAAC,EAAE;IAClBpC,OAAO,CAACuC,SAAS,CAACF,OAAO,EAAEC,OAAO,CAAC;IACnCtC,OAAO,CAACwC,MAAM,CAACJ,QAAQ,CAAC;IACxBpC,OAAO,CAACuC,SAAS,CAAC,CAACF,OAAO,EAAE,CAACC,OAAO,CAAC;;;AAKzC,OAAO,IAAMG,cAAc,GAAGtE,eAAe,EAAE;;;;;;;;;;;;;;;AAgB/C,OAAO,SAASuE,SAASA,CAAC1C,OAAO,EAC/B2C,SAAS,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,OAAO,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAE;EAChE,IAAIC,KAAK;EACT,IAAIT,OAAO,IAAI,CAAC,EAAE;IAChBS,KAAK,GAAGrD,OAAO,CAACsD,WAAW;IAC3BtD,OAAO,CAACsD,WAAW,GAAGD,KAAK,GAAGT,OAAO;;EAEvC,IAAID,SAAS,EAAE;IACb3C,OAAO,CAACuD,YAAY,CAACC,KAAK,CAACxD,OAAO,EAAE2C,SAAS,CAAC;;EAGhD3C,OAAO,CAAC0C,SAAS,CAACG,KAAK,EAAEC,OAAO,EAAEC,OAAO,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEH,CAAC,GAAGI,KAAK,EAAEH,CAAC,GAAGG,KAAK,CAAC;EAE5E,IAAIC,KAAK,EAAE;IACTrD,OAAO,CAACsD,WAAW,GAAGD,KAAK;;EAE7B,IAAIV,SAAS,EAAE;IACb3C,OAAO,CAACuD,YAAY,CAACC,KAAK,CAACxD,OAAO,EAAEyC,cAAc,CAAC"},"metadata":{},"sourceType":"module"}