{"ast":null,"code":"/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { TRUE } from '../functions.js';\nimport { includes } from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport var TranslateEvent = /*@__PURE__*/function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n    Event.call(this, type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n  }\n  if (Event) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create(Event && Event.prototype);\n  TranslateEvent.prototype.constructor = TranslateEvent;\n  return TranslateEvent;\n}(Event);\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /*@__PURE__*/function (PointerInteraction) {\n  function Translate(opt_options) {\n    var options = opt_options ? opt_options : {};\n    PointerInteraction.call( /** @type {import(\"./Pointer.js\").Options} */this, options);\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n    listen(this, getChangeEventType(InteractionProperty.ACTIVE), this.handleActiveChanged_, this);\n  }\n  if (PointerInteraction) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create(PointerInteraction && PointerInteraction.prototype);\n  Translate.prototype.constructor = Translate;\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleDownEvent = function handleDownEvent(event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate));\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleUpEvent = function handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate));\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleDragEvent = function handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      var newCoordinate = event.coordinate;\n      var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      features.forEach(function (feature) {\n        var geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate));\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleMoveEvent = function handleMoveEvent(event) {\n    var elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  };\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(pixel, function (feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function getHitTolerance() {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.setMap = function setMap(map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_() {\n    this.updateState_(null);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function updateState_(oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n  return Translate;\n}(PointerInteraction);\nexport default Translate;","map":{"version":3,"names":["Collection","getChangeEventType","listen","Event","TRUE","includes","PointerInteraction","InteractionProperty","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","type","features","coordinate","call","prototype","constructor","Translate","opt_options","options","lastCoordinate_","features_","undefined","layerFilter","layers","layer","layerFilter_","hitTolerance_","hitTolerance","lastFeature_","ACTIVE","handleActiveChanged_","handleDownEvent","event","featuresAtPixel_","pixel","map","handleMoveEvent","dispatchEvent","handleUpEvent","handleDragEvent","newCoordinate","deltaX","deltaY","forEach","feature","geom","getGeometry","translate","setGeometry","elem","getViewport","classList","remove","add","forEachFeatureAtPixel","getArray","bind","getHitTolerance","setHitTolerance","setMap","oldMap","getMap","updateState_","active","getActive"],"sources":["../../../src/ol/interaction/Translate.js"],"sourcesContent":["/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   */\n  constructor(type, features, coordinate) {\n\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function(feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING, features,\n          newCoordinate));\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}