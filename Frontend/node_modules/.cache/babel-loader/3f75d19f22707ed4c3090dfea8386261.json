{"ast":null,"code":"import _ol_ from '../index.js';\nimport _ol_proj_Projection_ from '../proj/projection.js';\nimport _ol_proj_Units_ from '../proj/units.js';\nvar _ol_proj_EPSG4326_ = {};\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {ol.proj.Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n * @private\n */\n_ol_proj_EPSG4326_.Projection_ = function (code, opt_axisOrientation) {\n  _ol_proj_Projection_.call(this, {\n    code: code,\n    units: _ol_proj_Units_.DEGREES,\n    extent: _ol_proj_EPSG4326_.EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: _ol_proj_EPSG4326_.METERS_PER_UNIT,\n    worldExtent: _ol_proj_EPSG4326_.EXTENT\n  });\n};\n_ol_.inherits(_ol_proj_EPSG4326_.Projection_, _ol_proj_Projection_);\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\n_ol_proj_EPSG4326_.RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {ol.Extent}\n */\n_ol_proj_EPSG4326_.EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\n_ol_proj_EPSG4326_.METERS_PER_UNIT = Math.PI * _ol_proj_EPSG4326_.RADIUS / 180;\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<ol.proj.Projection>}\n */\n_ol_proj_EPSG4326_.PROJECTIONS = [new _ol_proj_EPSG4326_.Projection_('CRS:84'), new _ol_proj_EPSG4326_.Projection_('EPSG:4326', 'neu'), new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:EPSG::4326', 'neu'), new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'), new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:OGC:1.3:CRS84'), new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:OGC:2:84'), new _ol_proj_EPSG4326_.Projection_('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'), new _ol_proj_EPSG4326_.Projection_('urn:x-ogc:def:crs:EPSG:4326', 'neu')];\nexport default _ol_proj_EPSG4326_;","map":{"version":3,"names":["_ol_","_ol_proj_Projection_","_ol_proj_Units_","_ol_proj_EPSG4326_","Projection_","code","opt_axisOrientation","call","units","DEGREES","extent","EXTENT","axisOrientation","global","metersPerUnit","METERS_PER_UNIT","worldExtent","inherits","RADIUS","Math","PI","PROJECTIONS"],"sources":["D:/demo_one/react-website-v1/node_modules/ol/proj/epsg4326.js"],"sourcesContent":["import _ol_ from '../index.js';\nimport _ol_proj_Projection_ from '../proj/projection.js';\nimport _ol_proj_Units_ from '../proj/units.js';\nvar _ol_proj_EPSG4326_ = {};\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {ol.proj.Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n * @private\n */\n_ol_proj_EPSG4326_.Projection_ = function(code, opt_axisOrientation) {\n  _ol_proj_Projection_.call(this, {\n    code: code,\n    units: _ol_proj_Units_.DEGREES,\n    extent: _ol_proj_EPSG4326_.EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: _ol_proj_EPSG4326_.METERS_PER_UNIT,\n    worldExtent: _ol_proj_EPSG4326_.EXTENT\n  });\n};\n_ol_.inherits(_ol_proj_EPSG4326_.Projection_, _ol_proj_Projection_);\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\n_ol_proj_EPSG4326_.RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {ol.Extent}\n */\n_ol_proj_EPSG4326_.EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_proj_EPSG4326_.METERS_PER_UNIT = Math.PI * _ol_proj_EPSG4326_.RADIUS / 180;\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<ol.proj.Projection>}\n */\n_ol_proj_EPSG4326_.PROJECTIONS = [\n  new _ol_proj_EPSG4326_.Projection_('CRS:84'),\n  new _ol_proj_EPSG4326_.Projection_('EPSG:4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:OGC:2:84'),\n  new _ol_proj_EPSG4326_.Projection_('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\nexport default _ol_proj_EPSG4326_;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,aAAa;AAC9B,OAAOC,oBAAoB,MAAM,uBAAuB;AACxD,OAAOC,eAAe,MAAM,kBAAkB;AAC9C,IAAIC,kBAAkB,GAAG,CAAC,CAAC;;AAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,kBAAkB,CAACC,WAAW,GAAG,UAASC,IAAI,EAAEC,mBAAmB,EAAE;EACnEL,oBAAoB,CAACM,IAAI,CAAC,IAAI,EAAE;IAC9BF,IAAI,EAAEA,IAAI;IACVG,KAAK,EAAEN,eAAe,CAACO,OAAO;IAC9BC,MAAM,EAAEP,kBAAkB,CAACQ,MAAM;IACjCC,eAAe,EAAEN,mBAAmB;IACpCO,MAAM,EAAE,IAAI;IACZC,aAAa,EAAEX,kBAAkB,CAACY,eAAe;IACjDC,WAAW,EAAEb,kBAAkB,CAACQ;EAClC,CAAC,CAAC;AACJ,CAAC;AACDX,IAAI,CAACiB,QAAQ,CAACd,kBAAkB,CAACC,WAAW,EAAEH,oBAAoB,CAAC;;AAGnE;AACA;AACA;AACA;AACA;AACA;AACAE,kBAAkB,CAACe,MAAM,GAAG,OAAO;;AAGnC;AACA;AACA;AACA;AACA;AACA;AACAf,kBAAkB,CAACQ,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;;AAGhD;AACA;AACA;AACA;AACAR,kBAAkB,CAACY,eAAe,GAAGI,IAAI,CAACC,EAAE,GAAGjB,kBAAkB,CAACe,MAAM,GAAG,GAAG;;AAG9E;AACA;AACA;AACA;AACA;AACA;AACAf,kBAAkB,CAACkB,WAAW,GAAG,CAC/B,IAAIlB,kBAAkB,CAACC,WAAW,CAAC,QAAQ,CAAC,EAC5C,IAAID,kBAAkB,CAACC,WAAW,CAAC,WAAW,EAAE,KAAK,CAAC,EACtD,IAAID,kBAAkB,CAACC,WAAW,CAAC,4BAA4B,EAAE,KAAK,CAAC,EACvE,IAAID,kBAAkB,CAACC,WAAW,CAAC,+BAA+B,EAAE,KAAK,CAAC,EAC1E,IAAID,kBAAkB,CAACC,WAAW,CAAC,+BAA+B,CAAC,EACnE,IAAID,kBAAkB,CAACC,WAAW,CAAC,0BAA0B,CAAC,EAC9D,IAAID,kBAAkB,CAACC,WAAW,CAAC,8CAA8C,EAAE,KAAK,CAAC,EACzF,IAAID,kBAAkB,CAACC,WAAW,CAAC,6BAA6B,EAAE,KAAK,CAAC,CACzE;AACD,eAAeD,kBAAkB"},"metadata":{},"sourceType":"module"}