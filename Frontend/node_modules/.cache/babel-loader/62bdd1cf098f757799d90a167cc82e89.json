{"ast":null,"code":"/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport { asString } from '../../color.js';\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nvar CanvasPolygonReplay = /*@__PURE__*/function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n  if (CanvasReplay) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create(CanvasReplay && CanvasReplay.prototype);\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle(circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE, asString(defaultFillStyle)]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon(polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE, asString(defaultFillStyle)]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon(multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE, asString(defaultFillStyle)]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_(geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n  return CanvasPolygonReplay;\n}(CanvasReplay);\nexport default CanvasPolygonReplay;","map":{"version":3,"names":["asString","snap","defaultFillStyle","CanvasInstruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasReplay","CanvasPolygonReplay","tolerance","maxExtent","resolution","pixelRatio","overlaps","declutterTree","call","drawFlatCoordinatess_","flatCoordinates","offset","ends","stride","state","fill","fillStyle","undefined","stroke","strokeStyle","numEnds","length","instructions","push","hitDetectionInstructions","i","end","myBegin","coordinates","myEnd","appendFlatCoordinates","moveToLineToInstruction","MOVE_TO_LINE_TO","drawCircle","circleGeometry","feature","setFillStrokeStyles_","beginGeometry","SET_FILL_STYLE","SET_STROKE_STYLE","lineWidth","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","getFlatCoordinates","getStride","circleInstruction","CIRCLE","endGeometry","drawPolygon","polygonGeometry","getEnds","getOrientedFlatCoordinates","drawMultiPolygon","multiPolygonGeometry","endss","getEndss","ii","finish","reverseHitDetectionInstructions","geometry","updateFillStyle","createFill","updateStrokeStyle","applyStroke"],"sources":["../../../../src/ol/render/canvas/PolygonReplay.js"],"sourcesContent":["/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nclass CanvasPolygonReplay extends CanvasReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle != undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  setFillStrokeStyles_(geometry) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\n\nexport default CanvasPolygonReplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}