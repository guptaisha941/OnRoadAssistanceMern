{"ast":null,"code":"/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport { equals } from '../../array.js';\nimport { getHeight, getIntersection, getWidth, isEmpty } from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport { assign } from '../../obj.js';\nimport { layerRendererConstructors } from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n  }\n  if (IntermediateCanvasRenderer) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create(IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype);\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal() {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform() {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame(frameState, layerState) {\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */this.getLayer();\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */imageLayer.getSource();\n    var hints = frameState.viewHints;\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */assign({}, frameState, {\n          size: [getWidth(renderedExtent) / viewResolution, getHeight(renderedExtent) / viewResolution],\n          viewState: /** @type {import(\"../../View.js\").State} */assign({}, frameState.viewState, {\n            rotation: 0\n          })\n        });\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function (callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) && (vectorRenderer.replayGroupChanged || !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_, pixelRatio * size[0] / 2, pixelRatio * size[1] / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform, pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5], pixelRatio / viewResolution, -pixelRatio / viewResolution, 0, -viewCenter[0], -viewCenter[1]);\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer);\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function (layer) {\n  return layer.getType() === LayerType.IMAGE || layer.getType() === LayerType.VECTOR && /** @type {import(\"../../layer/Vector.js\").default} */layer.getRenderMode() === VectorRenderType.IMAGE;\n};\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function (mapRenderer, layer) {\n  return new CanvasImageLayerRenderer( /** @type {import(\"../../layer/Image.js\").default} */layer);\n};\nexport default CanvasImageLayerRenderer;","map":{"version":3,"names":["ENABLE_RASTER_REPROJECTION","ImageCanvas","LayerType","ViewHint","equals","getHeight","getIntersection","getWidth","isEmpty","VectorRenderType","assign","layerRendererConstructors","IntermediateCanvasRenderer","create","createTransform","compose","composeTransform","CanvasImageLayerRenderer","imageLayer","call","image_","imageTransform_","skippedFeatures_","vectorRenderer_","getType","VECTOR","i","ii","length","ctor","disposeInternal","dispose","prototype","getImage","getImageTransform","prepareFrame","frameState","layerState","pixelRatio","size","viewState","viewCenter","center","viewResolution","resolution","image","getLayer","imageSource","getSource","hints","viewHints","vectorRenderer","renderedExtent","extent","undefined","ANIMATING","INTERACTING","projection","sourceProjection","getProjection","skippedFeatures","context","imageFrameState","rotation","newSkippedFeatures","Object","keys","skippedFeatureUids","sort","canvas","callback","replayGroupChanged","width","height","loadImage","imageExtent","getExtent","imageResolution","getResolution","imagePixelRatio","getPixelRatio","scale","transform","coordinateToCanvasPixelTransform","renderedResolution","forEachFeatureAtCoordinate","coordinate","hitTolerance","layer","IMAGE","getRenderMode","mapRenderer"],"sources":["../../../../src/ol/renderer/canvas/ImageLayer.js"],"sourcesContent":["/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends IntermediateCanvasRenderer {\n\n  /**\n   * @param {import(\"../../layer/Image.js\").default|import(\"../../layer/Vector.js\").default} imageLayer Image or vector layer.\n   */\n  constructor(imageLayer) {\n\n    super(imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        const ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageTransform() {\n    return this.imageTransform_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState) {\n\n    const pixelRatio = frameState.pixelRatio;\n    const size = frameState.size;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n\n    let image;\n    const imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    const imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    const hints = frameState.viewHints;\n\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      let projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        const sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      let skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        const context = vectorRenderer.context;\n        const imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      const imageExtent = image.getExtent();\n      const imageResolution = image.getResolution();\n      const imagePixelRatio = image.getPixelRatio();\n      const scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      const transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return super.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    }\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}