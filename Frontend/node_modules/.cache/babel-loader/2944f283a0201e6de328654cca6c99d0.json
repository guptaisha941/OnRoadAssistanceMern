{"ast":null,"code":"import _ol_obj_ from '../obj.js';\nvar _ol_proj_transforms_ = {};\n\n/**\n * @private\n * @type {Object.<string, Object.<string, ol.TransformFunction>>}\n */\n_ol_proj_transforms_.cache_ = {};\n\n/**\n * Clear the transform cache.\n */\n_ol_proj_transforms_.clear = function () {\n  _ol_proj_transforms_.cache_ = {};\n};\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {ol.proj.Projection} source Source.\n * @param {ol.proj.Projection} destination Destination.\n * @param {ol.TransformFunction} transformFn Transform.\n */\n_ol_proj_transforms_.add = function (source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transforms = _ol_proj_transforms_.cache_;\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n};\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {ol.proj.Projection} source Source projection.\n * @param {ol.proj.Projection} destination Destination projection.\n * @return {ol.TransformFunction} transformFn The unregistered transform.\n */\n_ol_proj_transforms_.remove = function (source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transforms = _ol_proj_transforms_.cache_;\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (_ol_obj_.isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n};\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {ol.TransformFunction|undefined} The transform function (if found).\n */\n_ol_proj_transforms_.get = function (sourceCode, destinationCode) {\n  var transform;\n  var transforms = _ol_proj_transforms_.cache_;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n};\nexport default _ol_proj_transforms_;","map":{"version":3,"names":["_ol_obj_","_ol_proj_transforms_","cache_","clear","add","source","destination","transformFn","sourceCode","getCode","destinationCode","transforms","remove","transform","isEmpty","get"],"sources":["D:/demo_one/react-website-v1/node_modules/ol/proj/transforms.js"],"sourcesContent":["import _ol_obj_ from '../obj.js';\nvar _ol_proj_transforms_ = {};\n\n\n/**\n * @private\n * @type {Object.<string, Object.<string, ol.TransformFunction>>}\n */\n_ol_proj_transforms_.cache_ = {};\n\n\n/**\n * Clear the transform cache.\n */\n_ol_proj_transforms_.clear = function() {\n  _ol_proj_transforms_.cache_ = {};\n};\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {ol.proj.Projection} source Source.\n * @param {ol.proj.Projection} destination Destination.\n * @param {ol.TransformFunction} transformFn Transform.\n */\n_ol_proj_transforms_.add = function(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transforms = _ol_proj_transforms_.cache_;\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n};\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {ol.proj.Projection} source Source projection.\n * @param {ol.proj.Projection} destination Destination projection.\n * @return {ol.TransformFunction} transformFn The unregistered transform.\n */\n_ol_proj_transforms_.remove = function(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transforms = _ol_proj_transforms_.cache_;\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (_ol_obj_.isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n};\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {ol.TransformFunction|undefined} The transform function (if found).\n */\n_ol_proj_transforms_.get = function(sourceCode, destinationCode) {\n  var transform;\n  var transforms = _ol_proj_transforms_.cache_;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n};\nexport default _ol_proj_transforms_;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,WAAW;AAChC,IAAIC,oBAAoB,GAAG,CAAC,CAAC;;AAG7B;AACA;AACA;AACA;AACAA,oBAAoB,CAACC,MAAM,GAAG,CAAC,CAAC;;AAGhC;AACA;AACA;AACAD,oBAAoB,CAACE,KAAK,GAAG,YAAW;EACtCF,oBAAoB,CAACC,MAAM,GAAG,CAAC,CAAC;AAClC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,oBAAoB,CAACG,GAAG,GAAG,UAASC,MAAM,EAAEC,WAAW,EAAEC,WAAW,EAAE;EACpE,IAAIC,UAAU,GAAGH,MAAM,CAACI,OAAO,EAAE;EACjC,IAAIC,eAAe,GAAGJ,WAAW,CAACG,OAAO,EAAE;EAC3C,IAAIE,UAAU,GAAGV,oBAAoB,CAACC,MAAM;EAC5C,IAAI,EAAEM,UAAU,IAAIG,UAAU,CAAC,EAAE;IAC/BA,UAAU,CAACH,UAAU,CAAC,GAAG,CAAC,CAAC;EAC7B;EACAG,UAAU,CAACH,UAAU,CAAC,CAACE,eAAe,CAAC,GAAGH,WAAW;AACvD,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,oBAAoB,CAACW,MAAM,GAAG,UAASP,MAAM,EAAEC,WAAW,EAAE;EAC1D,IAAIE,UAAU,GAAGH,MAAM,CAACI,OAAO,EAAE;EACjC,IAAIC,eAAe,GAAGJ,WAAW,CAACG,OAAO,EAAE;EAC3C,IAAIE,UAAU,GAAGV,oBAAoB,CAACC,MAAM;EAC5C,IAAIW,SAAS,GAAGF,UAAU,CAACH,UAAU,CAAC,CAACE,eAAe,CAAC;EACvD,OAAOC,UAAU,CAACH,UAAU,CAAC,CAACE,eAAe,CAAC;EAC9C,IAAIV,QAAQ,CAACc,OAAO,CAACH,UAAU,CAACH,UAAU,CAAC,CAAC,EAAE;IAC5C,OAAOG,UAAU,CAACH,UAAU,CAAC;EAC/B;EACA,OAAOK,SAAS;AAClB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACAZ,oBAAoB,CAACc,GAAG,GAAG,UAASP,UAAU,EAAEE,eAAe,EAAE;EAC/D,IAAIG,SAAS;EACb,IAAIF,UAAU,GAAGV,oBAAoB,CAACC,MAAM;EAC5C,IAAIM,UAAU,IAAIG,UAAU,IAAID,eAAe,IAAIC,UAAU,CAACH,UAAU,CAAC,EAAE;IACzEK,SAAS,GAAGF,UAAU,CAACH,UAAU,CAAC,CAACE,eAAe,CAAC;EACrD;EACA,OAAOG,SAAS;AAClB,CAAC;AACD,eAAeZ,oBAAoB"},"metadata":{},"sourceType":"module"}