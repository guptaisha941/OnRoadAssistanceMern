{"ast":null,"code":"/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n  if (DragBox) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create(DragBox && DragBox.prototype);\n  DragZoom.prototype.constructor = DragZoom;\n  return DragZoom;\n}(DragBox);\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */map.getView();\n  var size = /** @type {!import(\"../size.js\").Size} */map.getSize();\n  var extent = this.getGeometry().getExtent();\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([map.getPixelFromCoordinate(getBottomLeft(extent)), map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n  var resolution = view.constrainResolution(view.getResolutionForExtent(extent, size));\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\nexport default DragZoom;","map":{"version":3,"names":["easeOut","shiftKeyOnly","createOrUpdateFromCoordinates","getBottomLeft","getCenter","getTopRight","scaleFromCenter","DragBox","DragZoom","opt_options","options","condition","call","className","onBoxEnd","duration_","duration","undefined","out_","out","prototype","constructor","map","getMap","view","getView","size","getSize","extent","getGeometry","getExtent","mapExtent","calculateExtent","boxPixelExtent","getPixelFromCoordinate","factor","getResolutionForExtent","resolution","constrainResolution","center","constrainCenter","animate","easing"],"sources":["../../../src/ol/interaction/DragZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n}\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  const map = this.getMap();\n  const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n"],"mappings":"AAAA;;;AAGA,SAAQA,OAAO,QAAO,cAAc;AACpC,SAAQC,YAAY,QAAO,wBAAwB;AACnD,SAAQC,6BAA6B,EAAEC,aAAa,EAAEC,SAAS,EAAEC,WAAW,EAAEC,eAAe,QAAO,cAAc;AAClH,OAAOC,OAAO,MAAM,cAAc;;;;;;;;;;;;;;;;;;;;;;;;AA0BlC,IAAMC,QAAQ,GAAgB,uBAAAD,OAAA;EAI5B,SAAAC,QAAWA,CAACC,WAAW,EAAE;IACvB,IAAMC,OAAO,GAAGD,WAAW,GAAGA,WAAW,GAAG,EAAE;IAE9C,IAAME,SAAS,GAAGD,OAAO,CAACC,SAAS,GAAGD,OAAO,CAACC,SAAS,GAAGV,YAAY;IAEtEM,OAAA,CAAAK,IAAK,OAAC;MACJD,SAAS,EAAEA,SAAS;MACpBE,SAAS,EAAEH,OAAO,CAACG,SAAS,IAAI,aAAa;MAC7CC,QAAQ,EAAEA;KACX,CAAC;;;;;;IAMF,IAAI,CAACC,SAAS,GAAGL,OAAO,CAACM,QAAQ,KAAKC,SAAS,GAAGP,OAAO,CAACM,QAAQ,GAAG,GAAG;;;;;;IAMxE,IAAI,CAACE,IAAI,GAAGR,OAAO,CAACS,GAAG,KAAKF,SAAS,GAAGP,OAAO,CAACS,GAAG,GAAG,KAAK;;;;UAC5D,CAAAC,SAAA,CAAAC,WAAA,GAAAb,QAAA;;EA1BoBD,OAAA;;;;;AAiCvB,SAASO,QAAQA,CAAA,EAAG;EAClB,IAAMQ,GAAG,GAAG,IAAI,CAACC,MAAM,EAAE;EACzB,IAAMC,IAAI,+CAAiDF,GAAG,CAACG,OAAO,EAAG;EACzE,IAAMC,IAAI,4CAA8CJ,GAAG,CAACK,OAAO,EAAG;EACtE,IAAIC,MAAM,GAAG,IAAI,CAACC,WAAW,EAAE,CAACC,SAAS,EAAE;EAE3C,IAAI,IAAI,CAACZ,IAAI,EAAE;IACb,IAAMa,SAAS,GAAGP,IAAI,CAACQ,eAAe,CAACN,IAAI,CAAC;IAC5C,IAAMO,cAAc,GAAG/B,6BAA6B,CAAC,CACnDoB,GAAG,CAACY,sBAAsB,CAAC/B,aAAa,CAACyB,MAAM,CAAC,CAAC,EACjDN,GAAG,CAACY,sBAAsB,CAAC7B,WAAW,CAACuB,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,IAAMO,MAAM,GAAGX,IAAI,CAACY,sBAAsB,CAACH,cAAc,EAAEP,IAAI,CAAC;IAEhEpB,eAAe,CAACyB,SAAS,EAAE,CAAC,GAAGI,MAAM,CAAC;IACtCP,MAAM,GAAGG,SAAS;;EAGpB,IAAMM,UAAU,GAAGb,IAAI,CAACc,mBAAmB,CACzCd,IAAI,CAACY,sBAAsB,CAACR,MAAM,EAAEF,IAAI,CAAC,CAAC;EAE5C,IAAIa,MAAM,GAAGnC,SAAS,CAACwB,MAAM,CAAC;EAC9BW,MAAM,GAAGf,IAAI,CAACgB,eAAe,CAACD,MAAM,CAAC;EAErCf,IAAI,CAACiB,OAAO,CAAC;IACXJ,UAAU,EAAEA,UAAU;IACtBE,MAAM,EAAEA,MAAM;IACdvB,QAAQ,EAAE,IAAI,CAACD,SAAS;IACxB2B,MAAM,EAAE1C;GACT,CAAC;;AAIJ,eAAeQ,QAAQ"},"metadata":{},"sourceType":"module"}